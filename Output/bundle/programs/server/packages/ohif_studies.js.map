{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:studies/both/main.js","meteor://ðŸ’»app/packages/ohif:studies/server/main.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/lib/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/lib/parseFloatArray.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/namespace.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/qido/instances.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/qido/retrieveMetadata.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/qido/studies.js","meteor://ðŸ’»app/packages/ohif:studies/imports/both/services/wado/retrieveMetadata.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/methods/getStudyMetadata.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/methods/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/methods/studylistSearch.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/index.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/namespace.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/dimse/instances.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/dimse/retrieveMetadata.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/dimse/setup.js","meteor://ðŸ’»app/packages/ohif:studies/imports/server/services/dimse/studies.js"],"names":["OHIF","module","watch","require","v","studies","export","parseFloatArray","obj","result","objs","split","i","length","push","parseFloat","services","QIDO","WADO","DICOMwebClient","default","DICOMWeb","resultDataToStudyMetadata","server","studyInstanceUid","resultData","seriesMap","seriesList","forEach","instance","seriesInstanceUid","getString","series","seriesNumber","instances","sopInstanceUid","uri","wadoUriRoot","sopClassUid","instanceNumber","Instances","config","url","qidoRoot","headers","getAuthorizationHeader","dicomWeb","api","queryParams","getQIDOQueryParams","filter","qidoSupportsIncludeField","options","studyInstanceUID","searchForInstances","then","data","buildUrl","wadoRoot","buildInstanceWadoRsUri","buildInstanceFrameWadoRsUri","frame","baseWadoRsUri","instancesIn","anInstance","studyData","patientName","getName","patientId","patientAge","getNumber","patientSize","patientWeight","accessionNumber","studyDate","modalities","studyDescription","imageCount","institutionName","Promise","all","map","wadouri","wadorsuri","instanceSummary","WADOProxy","convertURL","imageRendering","thumbnailRendering","RetrieveMetadata","resolve","reject","getJSON","requestOptions","study","Meteor","isServer","XMLHttpRequest","global","dateToString","date","year","getFullYear","toString","month","getMonth","day","getDate","repeat","concat","serverSupportsQIDOIncludeField","commaSeparatedFields","join","parameters","PatientName","PatientID","AccessionNumber","StudyDescription","ModalitiesInStudy","modalitiesInStudy","limit","offset","includefield","studyDateFrom","studyDateTo","dateFrom","Date","dateTo","StudyDate","studyUids","Array","isArray","replace","StudyInstanceUID","params","Object","keys","key","undefined","resultDataToStudies","studyTime","referringPhysicianName","patientBirthdate","patientSex","studyId","numberOfStudyRelatedSeries","numberOfStudyRelatedInstances","getModalities","Studies","searchForStudies","paletteColorCache","count","maxAge","entries","isValidUID","paletteUID","get","entry","hasOwnProperty","now","time","add","uid","buildInstanceWadoUrl","paramString","getSourceImageInstanceUid","SourceImageSequence","Value","getPaletteColor","tag","lutDescriptor","numLutEntries","bits","BulkDataURI","indexOf","includes","readUInt16","byteArray","position","arrayBufferToPaletteColorLUT","arraybuffer","Uint8Array","lut","retrieveBulkData","getPaletteColors","r","g","b","promises","args","red","green","blue","getFrameIncrementPointer","element","frameIncrementPointerNames","value","getRadiopharmaceuticalInfo","modality","radiopharmaceuticalInfo","firstPetRadiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","getRelationshipString","relationshipType","getNestedObject","getMeaningString","getValueString","conceptCode","conceptCodeValue","conceptCodeMeaning","schemeDesignator","numValue","codeValue","constructPlainValue","constructContentSequence","header","items","item","parseContent","getModality","getContentDateTime","substr","seriesDescription","seriesDate","seriesTime","contentSequence","completionFlag","manufacturer","verificationFlag","contentDateTime","imageType","imagePositionPatient","imageOrientationPatient","frameOfReferenceUID","sliceLocation","samplesPerPixel","photometricInterpretation","planarConfiguration","rows","columns","pixelSpacing","pixelAspectRatio","bitsAllocated","bitsStored","highBit","pixelRepresentation","smallestPixelValue","largestPixelValue","windowCenter","windowWidth","rescaleIntercept","rescaleSlope","rescaleType","sourceImageInstanceUid","laterality","viewPosition","acquisitionDateTime","numberOfFrames","frameIncrementPointer","frameTime","frameTimeVector","sliceThickness","lossyImageCompression","derivationDescription","lossyImageCompressionRatio","lossyImageCompressionMethod","echoNumber","contrastBolusAgent","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","palettes","paletteColorLookupTableUID","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","retrieveStudyMetadata","methods","GetStudyMetadata","log","info","servers","getCurrentServer","Error","type","metadataSource","DIMSE","error","trace","StudyListSearch","instanceRaw","toObject","peers","serverRoot","host","port","retrieveInstances","getValue","defaultValue","patientBirthDate","tablePosition","spacingBetweenSlices","activeServer","supportsInstanceRetrievalByStudyUid","results","retrieveInstancesByStudyOnly","CurrentServer","setupDIMSE","connection","reset","peer","addPeer","startup","find","observe","added","changed","moment","studyRaw","filterStudyDate","convertDate","format","retrieveStudies"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAETJ,KAAKK,OAAL,GAAe,EAAf;;AAEAF,QAAQ,iBAAR,E;;;;;;;;;;;ACJAA,QAAQ,mBAAR,E;;;;;;;;;;;ACAAF,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb;AAA+BF,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,E;;;;;;;;;;;ACA/BF,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,E;;;;;;;;;;;ACAAF,OAAOK,MAAP,CAAc;AAACC,mBAAgB,MAAIA;AAArB,CAAd;;AAAO,MAAMA,kBAAkB,UAASC,GAAT,EAAc;AACzC,MAAIC,SAAS,EAAb;;AAEA,MAAI,CAACD,GAAL,EAAU;AACN,WAAOC,MAAP;AACH;;AAED,MAAIC,OAAOF,IAAIG,KAAJ,CAAU,IAAV,CAAX;;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,KAAKG,MAAzB,EAAiCD,GAAjC,EAAsC;AAClCH,WAAOK,IAAP,CAAYC,WAAWL,KAAKE,CAAL,CAAX,CAAZ;AACH;;AAED,SAAOH,MAAP;AACH,CAbM,C;;;;;;;;;;;ACAPR,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb;AAAqCF,OAAOC,KAAP,CAAaC,QAAQ,qBAAR,CAAb;AAA6CF,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb;AAA2CF,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb;AAAoDF,OAAOC,KAAP,CAAaC,QAAQ,4BAAR,CAAb,E;;;;;;;;;;;ACAjL,IAAIH,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAETJ,KAAKK,OAAL,CAAaW,QAAb,GAAwB;AACpBC,QAAM,EADc;AAEpBC,QAAM;AAFc,CAAxB,C;;;;;;;;;;;ACFA,IAAIlB,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIe,cAAJ;AAAmBlB,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACiB,UAAQhB,CAAR,EAAU;AAACe,qBAAef,CAAf;AAAiB;;AAA7B,CAAxC,EAAuE,CAAvE;AAG1F,MAAM;AAAEiB;AAAF,IAAerB,IAArB;AAEA;;;;;;;;;;AASA,SAASsB,yBAAT,CAAmCC,MAAnC,EAA2CC,gBAA3C,EAA6DC,UAA7D,EAAyE;AACrE,MAAIC,YAAY,EAAhB;AACA,MAAIC,aAAa,EAAjB;AAEAF,aAAWG,OAAX,CAAmB,UAASC,QAAT,EAAmB;AAClC;AACA;AACA;AACA,QAAIC,oBAAoBT,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAxB;AACA,QAAIG,SAASN,UAAUI,iBAAV,CAAb,CALkC,CAOlC;AACA;;AACA,QAAI,CAACE,MAAL,EAAa;AACTA,eAAS;AACLF,2BAAmBA,iBADd;AAELG,sBAAcZ,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAFT;AAGLK,mBAAW;AAHN,OAAT,CADS,CAOT;;AACAR,gBAAUI,iBAAV,IAA+BE,MAA/B;AACAL,iBAAWb,IAAX,CAAgBkB,MAAhB;AACH,KAnBiC,CAqBlC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,QAAIG,iBAAiBd,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAArB;AACA,QAAIO,MAAMb,OAAOc,WAAP,GAAqB,6BAArB,GAAqDb,gBAArD,GAAwE,aAAxE,GAAwFM,iBAAxF,GAA4G,aAA5G,GAA4HK,cAA5H,GAA6I,kCAAvJ,CA/BkC,CAiClC;;AACAH,WAAOE,SAAP,CAAiBpB,IAAjB,CAAsB;AAClBwB,mBAAajB,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CADK;AAElBM,sBAAgBA,cAFE;AAGlBC,WAAKA,GAHa;AAIlBG,sBAAgBlB,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB;AAJE,KAAtB;AAMH,GAxCD;AAyCA,SAAOF,UAAP;AACH;AAED;;;;;;;;;AAOA3B,KAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BuB,SAA3B,GAAuC,UAASjB,MAAT,EAAiBC,gBAAjB,EAAmC;AACtE;AAEA,QAAMiB,SAAS;AACXC,SAAKnB,OAAOoB,QADD;AAEXC,aAAS5C,KAAKqB,QAAL,CAAcwB,sBAAd;AAFE,GAAf;AAIA,QAAMC,WAAW,IAAI3B,eAAe4B,GAAf,CAAmB5B,cAAvB,CAAsCsB,MAAtC,CAAjB;AACA,QAAMO,cAAcC,mBAAmBC,MAAnB,EAA2B3B,OAAO4B,wBAAlC,CAApB;AACA,QAAMC,UAAU;AACZC,sBAAkB7B;AADN,GAAhB;AAIA,SAAOsB,SAASQ,kBAAT,CAA4BF,OAA5B,EAAqCG,IAArC,CAA0C9C,UAAU;AACvD,WAAO;AACH4B,mBAAad,OAAOc,WADjB;AAEHb,wBAAkBA,gBAFf;AAGHG,kBAAYL,0BAA0BC,MAA1B,EAAkCC,gBAAlC,EAAoDf,OAAO+C,IAA3D;AAHT,KAAP;AAKH,GANM,CAAP;AAOH,CApBD,C;;;;;;;;;;;ACrEA,IAAIxD,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIe,cAAJ;AAAmBlB,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACiB,UAAQhB,CAAR,EAAU;AAACe,qBAAef,CAAf;AAAiB;;AAA7B,CAAxC,EAAuE,CAAvE;AAG1F,MAAM;AAAEiB;AAAF,IAAerB,IAArB;AAEA;;;;;;;;AAOA,SAASyD,QAAT,CAAkBlC,MAAlB,EAA0BC,gBAA1B,EAA4C;AACxC,SAAOD,OAAOmC,QAAP,GAAkB,6CAAlB,GAAkElC,gBAAzE;AACH;;AAED,SAASmC,sBAAT,CAAgCpC,MAAhC,EAAwCC,gBAAxC,EAA0DM,iBAA1D,EAA6EK,cAA7E,EAA6F;AACzF,SAAQ,GAAEZ,OAAOmC,QAAS,YAAWlC,gBAAiB,WAAUM,iBAAkB,cAAaK,cAAe,EAA9G;AACH;;AAED,SAASyB,2BAAT,CAAqCrC,MAArC,EAA6CC,gBAA7C,EAA+DM,iBAA/D,EAAkFK,cAAlF,EAAkG0B,KAAlG,EAAyG;AACrG,QAAMC,gBAAgBH,uBAAuBpC,MAAvB,EAA+BC,gBAA/B,EAAiDM,iBAAjD,EAAoEK,cAApE,CAAtB;AACA0B,UAAQA,SAAS,IAAT,IAAiB,CAAzB;AAEA,SAAQ,GAAEC,aAAc,WAAUD,KAAM,EAAxC;AACH;AACD;;;;;;;;;;;;AAUA,SAAevC,yBAAf,CAAyCC,MAAzC,EAAiDC,gBAAjD,EAAmEC,UAAnE,EAA+EsC,WAA/E;AAAA,kCAA4F;AAExF,UAAMpC,aAAa,EAAnB;;AAEA,QAAI,CAACF,WAAWZ,MAAhB,EAAwB;AACpB;AACH;;AAED,UAAMmD,aAAavC,WAAW,CAAX,CAAnB;;AACA,QAAI,CAACuC,UAAL,EAAiB;AACb;AACH;;AAED,UAAMC,YAAY;AACdtC,gBADc;AAEduC,mBAAa7C,SAAS8C,OAAT,CAAiBH,WAAW,UAAX,CAAjB,CAFC;AAGdI,iBAAW/C,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAHG;AAIdK,kBAAYhD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CAJE;AAKdO,mBAAalD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CALC;AAMdQ,qBAAenD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CAND;AAOdS,uBAAiBpD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAPH;AAQdU,iBAAWrD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CARG;AASdW,kBAAYtD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CATE;AAUdY,wBAAkBvD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAVJ;AAWda,kBAAYxD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAXE;AAYdxC,wBAAkBH,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAZJ;AAadc,uBAAiBzD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB;AAbH,KAAlB;AAeA,kBAAMe,QAAQC,GAAR,CAAYjB,YAAYpC,UAAZ,CAAuBsD,GAAvB,CAA2B,UAAevD,SAAf;AAAA,sCAA0B;AACnE,YAAIG,WAAWH,UAAUQ,SAAV,CAAoB,CAApB,CAAf;AACA,YAAIJ,oBAAoBD,SAASC,iBAAjC;AACA,YAAIE,SAASN,UAAUI,iBAAV,CAAb;;AACA,YAAI,CAACE,MAAL,EAAa;AACTA,mBAASN,SAAT;AACAM,iBAAOE,SAAP,GAAmB,EAAnB;AACAR,oBAAUI,iBAAV,IAA+BE,MAA/B;AACAL,qBAAWb,IAAX,CAAgBkB,MAAhB;AACH;;AACD,cAAMG,iBAAiBN,SAASM,cAAhC;AACA,cAAM+C,UAAUvB,uBAAuBpC,MAAvB,EAA+BC,gBAA/B,EAAiDM,iBAAjD,EAAoEK,cAApE,CAAhB;AACA,cAAM2B,gBAAgBH,uBAAuBpC,MAAvB,EAA+BC,gBAA/B,EAAiDM,iBAAjD,EAAoEK,cAApE,CAAtB;AACA,cAAMgD,YAAYvB,4BAA4BrC,MAA5B,EAAoCC,gBAApC,EAAsDM,iBAAtD,EAAyEK,cAAzE,CAAlB;AAEA,cAAMiD,kBAAkBvD,QAAxB;AACAuD,wBAAgBtB,aAAhB,GAA8BA,aAA9B;AACAsB,wBAAgBF,OAAhB,GAAwBG,UAAUC,UAAV,CAAqBJ,OAArB,EAA8B3D,MAA9B,CAAxB;AACA6D,wBAAgBD,SAAhB,GAA0BE,UAAUC,UAAV,CAAqBH,SAArB,EAAgC5D,MAAhC,CAA1B;AACA6D,wBAAgBG,cAAhB,GAA+BhE,OAAOgE,cAAtC;AACAH,wBAAgBI,kBAAhB,GAAmCjE,OAAOiE,kBAA1C;AACAxD,eAAOE,SAAP,CAAiBpB,IAAjB,CAAsBsE,eAAtB;AACH,OAtB4C;AAAA,KAA3B,CAAZ,CAAN;AAuBA,WAAOnB,SAAP;AACH,GApDD;AAAA;AAsDA;;;;;;;;AAMAjE,KAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BwE,gBAA3B,GAA8C,UAAelE,MAAf,EAAuBC,gBAAvB;AAAA,kCAAyC;AACnF,UAAMkB,MAAMe,SAASlC,MAAT,EAAiBC,gBAAjB,CAAZ;AACA,WAAO,IAAIuD,OAAJ,CAAY,CAACW,OAAD,EAAUC,MAAV,KAAqB;AACpCtE,eAASuE,OAAT,CAAiBlD,GAAjB,EAAsBnB,OAAOsE,cAA7B,EAA6CtC,IAA7C,CAAkD9C,UAAU;AACxDT,aAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BuB,SAA3B,CAAqCjB,MAArC,EAA6CC,gBAA7C,EAA+D+B,IAA/D,CAAoErB,aAAa;AAC7EZ,oCAA0BC,MAA1B,EAAkCC,gBAAlC,EAAoDf,MAApD,EAA4DyB,SAA5D,EAAuEqB,IAAvE,CAA6EuC,KAAD,IAAW;AACnFA,kBAAMzD,WAAN,GAAoBd,OAAOc,WAA3B;AACAyD,kBAAMtE,gBAAN,GAAyBA,gBAAzB;AACAkE,oBAAQI,KAAR;AACH,WAJD,EAIGH,MAJH;AAKH,SAND,EAMGA,MANH;AAOH,OARD,EAQGA,MARH;AASH,KAVM,CAAP;AAWH,GAb6C;AAAA,CAA9C,C;;;;;;;;;;;AChGA,IAAI3F,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIe,cAAJ;AAAmBlB,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACiB,UAAQhB,CAAR,EAAU;AAACe,qBAAef,CAAf;AAAiB;;AAA7B,CAAxC,EAAuE,CAAvE;AAG1F,MAAM;AAAEiB;AAAF,IAAerB,IAArB,C,CAEA;;AACA,IAAI+F,OAAOC,QAAX,EAAqB;AACjB,MAAIC,iBAAiB9F,QAAQ,MAAR,CAArB;;AAEA+F,SAAOD,cAAP,GAAwBA,cAAxB;AACH;AAED;;;;;;;;;AAOA,SAASE,YAAT,CAAsBC,IAAtB,EAA4B;AACxB,MAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,MAAIC,OAAOD,KAAKE,WAAL,GAAmBC,QAAnB,EAAX;AACA,MAAIC,QAAQ,CAACJ,KAAKK,QAAL,KAAkB,CAAnB,EAAsBF,QAAtB,EAAZ;AACA,MAAIG,MAAMN,KAAKO,OAAL,GAAeJ,QAAf,EAAV;AACAF,SAAO,IAAIO,MAAJ,CAAW,IAAIP,KAAKxF,MAApB,EAA4BgG,MAA5B,CAAmCR,IAAnC,CAAP;AACAG,UAAQ,IAAII,MAAJ,CAAW,IAAIJ,MAAM3F,MAArB,EAA6BgG,MAA7B,CAAoCL,KAApC,CAAR;AACAE,QAAM,IAAIE,MAAJ,CAAW,IAAIF,IAAI7F,MAAnB,EAA2BgG,MAA3B,CAAkCH,GAAlC,CAAN;AACA,SAAO,GAAGG,MAAH,CAAUR,IAAV,EAAgBG,KAAhB,EAAuBE,GAAvB,CAAP;AACH;AAED;;;;;;;;;;AAQA,SAASzD,kBAAT,CAA4BC,MAA5B,EAAoC4D,8BAApC,EAAoE;AAChE,QAAMC,uBAAuB,CAC5B;AACA;AACG;AAHyB,IAI3BC,IAJ2B,CAItB,GAJsB,CAA7B;AAMA,QAAMC,aAAa;AACfC,iBAAahE,OAAOgB,WADL;AAEfiD,eAAWjE,OAAOkB,SAFH;AAGfgD,qBAAiBlE,OAAOuB,eAHT;AAIf4C,sBAAkBnE,OAAO0B,gBAJV;AAKf0C,uBAAmBpE,OAAOqE,iBALX;AAMfC,WAAOtE,OAAOsE,KANC;AAOfC,YAAQvE,OAAOuE,MAPA;AAQfC,kBAAcZ,iCAAiCC,oBAAjC,GAAwD;AARvD,GAAnB,CAPgE,CAkBhE;;AACA,MAAI7D,OAAOyE,aAAP,IAAwBzE,OAAO0E,WAAnC,EAAgD;AAC5C,UAAMC,WAAW1B,aAAa,IAAI2B,IAAJ,CAAS5E,OAAOyE,aAAhB,CAAb,CAAjB;AACA,UAAMI,SAAS5B,aAAa,IAAI2B,IAAJ,CAAS5E,OAAO0E,WAAhB,CAAb,CAAf;AACAX,eAAWe,SAAX,GAAwB,GAAEH,QAAS,IAAGE,MAAO,EAA7C;AACH,GAvB+D,CAyBhE;;;AACA,MAAI7E,OAAO1B,gBAAX,EAA6B;AACzB,QAAIyG,YAAY/E,OAAO1B,gBAAvB;AACAyG,gBAAYC,MAAMC,OAAN,CAAcF,SAAd,IAA2BA,UAAUjB,IAAV,EAA3B,GAA8CiB,SAA1D;AACAA,gBAAYA,UAAUG,OAAV,CAAkB,WAAlB,EAA+B,IAA/B,CAAZ;AACAnB,eAAWoB,gBAAX,GAA8BJ,SAA9B;AACH,GA/B+D,CAiChE;;;AACA,QAAMK,SAAS,EAAf;AACAC,SAAOC,IAAP,CAAYvB,UAAZ,EAAwBrF,OAAxB,CAAgC6G,OAAO;AACnC,QAAIxB,WAAWwB,GAAX,MAAoBC,SAApB,IACAzB,WAAWwB,GAAX,MAAoB,EADxB,EAC4B;AACxBH,aAAOG,GAAP,IAAcxB,WAAWwB,GAAX,CAAd;AACH;AACJ,GALD;AAOA,SAAOH,MAAP;AACH;AAED;;;;;;;;AAMA,SAASK,mBAAT,CAA6BlH,UAA7B,EAAyC;AACrC,QAAMpB,UAAU,EAAhB;AAEA,MAAI,CAACoB,UAAD,IAAe,CAACA,WAAWZ,MAA/B,EAAuC;AAEvCY,aAAWG,OAAX,CAAmBkE,SAASzF,QAAQS,IAAR,CAAa;AACrCU,sBAAkBH,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CADmB;AAErC;AACApB,eAAWrD,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAH0B;AAIrC8C,eAAWvH,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAJ0B;AAKrCrB,qBAAiBpD,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CALoB;AAMrC+C,4BAAwBxH,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CANa;AAOrC;AACA5B,iBAAa7C,SAAS8C,OAAT,CAAiB2B,MAAM,UAAN,CAAjB,CARwB;AASrC1B,eAAW/C,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAT0B;AAUrCgD,sBAAkBzH,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAVmB;AAWrCiD,gBAAY1H,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAXyB;AAYrCkD,aAAS3H,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAZ4B;AAarCmD,gCAA4B5H,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAbS;AAcrCoD,mCAA+B7H,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAdM;AAerClB,sBAAkBvD,SAASU,SAAT,CAAmB+D,MAAM,UAAN,CAAnB,CAfmB;AAgBrC;AACA;AACAnB,gBAAYtD,SAASU,SAAT,CAAmBV,SAAS8H,aAAT,CAAuBrD,MAAM,UAAN,CAAvB,EAA0CA,MAAM,UAAN,CAA1C,CAAnB;AAlByB,GAAb,CAA5B;AAqBA,SAAOzF,OAAP;AACH;;AAEDL,KAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BmI,OAA3B,GAAqC,CAAC7H,MAAD,EAAS2B,MAAT,KAAoB;AACrD,QAAMT,SAAS;AACXC,SAAKnB,OAAOoB,QADD;AAEXC,aAAS5C,KAAKqB,QAAL,CAAcwB,sBAAd;AAFE,GAAf;AAKA,QAAMC,WAAW,IAAI3B,eAAe4B,GAAf,CAAmB5B,cAAvB,CAAsCsB,MAAtC,CAAjB;AACA,QAAMO,cAAcC,mBAAmBC,MAAnB,EAA2B3B,OAAO4B,wBAAlC,CAApB;AACA,QAAMC,UAAU;AACZJ;AADY,GAAhB;AAIA,SAAOF,SAASuG,gBAAT,CAA0BjG,OAA1B,EAAmCG,IAAnC,CAAwCoF,mBAAxC,CAAP;AACH,CAbD,C;;;;;;;;;;;ACtHA,IAAI3I,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIe,cAAJ;AAAmBlB,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACiB,UAAQhB,CAAR,EAAU;AAACe,qBAAef,CAAf;AAAiB;;AAA7B,CAAxC,EAAuE,CAAvE;AAA0E,IAAIG,eAAJ;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACI,kBAAgBH,CAAhB,EAAkB;AAACG,sBAAgBH,CAAhB;AAAkB;;AAAtC,CAAlD,EAA0F,CAA1F;AAKxL,MAAM;AAAEiB;AAAF,IAAerB,IAArB;AAEA;;;;AAGA,MAAMsJ,oBAAoB;AACtBC,SAAO,CADe;AAEtBC,UAAQ,KAAK,EAAL,GAAU,EAAV,GAAe,IAFD;AAEO;AAC7BC,WAAS,EAHa;AAItBC,cAAY,UAAUC,UAAV,EAAsB;AAC9B,WAAO,OAAOA,UAAP,KAAsB,QAAtB,IAAkCA,WAAW9I,MAAX,GAAoB,CAA7D;AACH,GANqB;AAOtB+I,OAAK,UAAUD,UAAV,EAAsB;AACvB,QAAIE,QAAQ,IAAZ;;AACA,QAAI,KAAKJ,OAAL,CAAaK,cAAb,CAA4BH,UAA5B,CAAJ,EAA6C;AACzCE,cAAQ,KAAKJ,OAAL,CAAaE,UAAb,CAAR,CADyC,CAEzC;;AACA,UAAK7B,KAAKiC,GAAL,KAAaF,MAAMG,IAApB,GAA4B,KAAKR,MAArC,EAA6C;AACzC;AACA,eAAO,KAAKC,OAAL,CAAaE,UAAb,CAAP;AACA,aAAKJ,KAAL;AACAM,gBAAQ,IAAR;AACH;AACJ;;AACD,WAAOA,KAAP;AACH,GApBqB;AAqBtBI,OAAK,UAAUJ,KAAV,EAAiB;AAClB,QAAI,KAAKH,UAAL,CAAgBG,MAAMK,GAAtB,CAAJ,EAAgC;AAC5B,UAAIP,aAAaE,MAAMK,GAAvB;;AACA,UAAI,KAAKT,OAAL,CAAaK,cAAb,CAA4BH,UAA5B,MAA4C,IAAhD,EAAsD;AAClD,aAAKJ,KAAL,GADkD,CACpC;AACjB;;AACDM,YAAMG,IAAN,GAAalC,KAAKiC,GAAL,EAAb;AACA,WAAKN,OAAL,CAAaE,UAAb,IAA2BE,KAA3B,CAN4B,CAO5B;AACH;AACJ;AA/BqB,CAA1B;AAkCA;;;;;;;;AAOA,SAASM,oBAAT,CAA8B5I,MAA9B,EAAsCC,gBAAtC,EAAwDM,iBAAxD,EAA2EK,cAA3E,EAA2F;AACvF;AACA,QAAMmG,SAAS,EAAf;AAEAA,SAAOxH,IAAP,CAAY,kBAAZ;AACAwH,SAAOxH,IAAP,CAAa,YAAWU,gBAAiB,EAAzC;AACA8G,SAAOxH,IAAP,CAAa,aAAYgB,iBAAkB,EAA3C;AACAwG,SAAOxH,IAAP,CAAa,aAAYqB,cAAe,EAAxC;AACAmG,SAAOxH,IAAP,CAAY,+BAAZ;AACAwH,SAAOxH,IAAP,CAAY,kBAAZ;AAEA,QAAMsJ,cAAc9B,OAAOtB,IAAP,CAAY,GAAZ,CAApB;AAEA,SAAQ,GAAEzF,OAAOc,WAAY,IAAG+H,WAAY,EAA5C;AACH;;AAED,SAASzG,sBAAT,CAAgCpC,MAAhC,EAAwCC,gBAAxC,EAA0DM,iBAA1D,EAA6EK,cAA7E,EAA6F;AACzF,SAAQ,GAAEZ,OAAOmC,QAAS,YAAWlC,gBAAiB,WAAUM,iBAAkB,cAAaK,cAAe,EAA9G;AACH;;AAED,SAASyB,2BAAT,CAAqCrC,MAArC,EAA6CC,gBAA7C,EAA+DM,iBAA/D,EAAkFK,cAAlF,EAAkG0B,KAAlG,EAAyG;AACrG,QAAMC,gBAAgBH,uBAAuBpC,MAAvB,EAA+BC,gBAA/B,EAAiDM,iBAAjD,EAAoEK,cAApE,CAAtB;AACA0B,UAAQA,SAAS,IAAT,IAAiB,CAAzB;AAEA,SAAQ,GAAEC,aAAc,WAAUD,KAAM,EAAxC;AACH;AAED;;;;;;;;;;AAQA,SAASwG,yBAAT,CAAmCxI,QAAnC,EAA6C;AACzC;AACA;AACA;AACA,MAAIyI,sBAAsBzI,SAAS,UAAT,CAA1B;;AACA,MAAIyI,uBAAuBA,oBAAoBC,KAA3C,IAAoDD,oBAAoBC,KAApB,CAA0B1J,MAAlF,EAA0F;AACtF,WAAOyJ,oBAAoBC,KAApB,CAA0B,CAA1B,EAA6B,UAA7B,EAAyCA,KAAzC,CAA+C,CAA/C,CAAP;AACH;AACJ;;AAED,SAASC,eAAT,CAAyBjJ,MAAzB,EAAiCM,QAAjC,EAA2C4I,GAA3C,EAAgDC,aAAhD,EAA+D;AAC3D,QAAMC,gBAAgBD,cAAc,CAAd,CAAtB;AACA,QAAME,OAAOF,cAAc,CAAd,CAAb;AAEA,MAAItI,MAAMiD,UAAUC,UAAV,CAAqBzD,SAAS4I,GAAT,EAAcI,WAAnC,EAAgDtJ,MAAhD,CAAV,CAJ2D,CAM3D;AACA;;AACA,MAAIA,OAAOmC,QAAP,CAAgBoH,OAAhB,CAAwB,OAAxB,MAAqC,CAArC,IACA,CAAC1I,IAAI2I,QAAJ,CAAa,OAAb,CADL,EAC4B;AACxB3I,UAAMA,IAAIgG,OAAJ,CAAY,MAAZ,EAAoB,OAApB,CAAN;AACH;;AAED,QAAM3F,SAAS;AACXC,SAAKnB,OAAOmC,QADD;AACW;AACtBd,aAAS5C,KAAKqB,QAAL,CAAcwB,sBAAd;AAFE,GAAf;AAIA,QAAMC,WAAW,IAAI3B,eAAe4B,GAAf,CAAmB5B,cAAvB,CAAsCsB,MAAtC,CAAjB;AACA,QAAMW,UAAU;AACZyH,iBAAazI;AADD,GAAhB;;AAIA,QAAM4I,aAAa,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACxC,WAAOD,UAAUC,QAAV,IAAuBD,UAAUC,WAAW,CAArB,IAA0B,GAAxD;AACH,GAFD;;AAIA,QAAMC,+BAAgCC,WAAD,IAAgB;AACjD,UAAMH,YAAY,IAAII,UAAJ,CAAeD,WAAf,CAAlB;AACA,UAAME,MAAM,EAAZ;;AAEA,SAAK,IAAI1K,IAAI,CAAb,EAAgBA,IAAI+J,aAApB,EAAmC/J,GAAnC,EAAwC;AACpC,UAAIgK,SAAS,EAAb,EAAiB;AACbU,YAAI1K,CAAJ,IAASoK,WAAWC,SAAX,EAAsBrK,IAAI,CAA1B,CAAT;AACH,OAFD,MAEO;AACH0K,YAAI1K,CAAJ,IAASqK,UAAUrK,CAAV,CAAT;AACH;AACJ;;AAED,WAAO0K,GAAP;AACH,GAbD;;AAeA,SAAOxI,SAASyI,gBAAT,CAA0BnI,OAA1B,EAAmCG,IAAnC,CAAwC4H,4BAAxC,CAAP;AACH;AAED;;;;;;;;;AAOA,SAAeK,gBAAf,CAAgCjK,MAAhC,EAAwCM,QAAxC,EAAkD6I,aAAlD;AAAA,kCAAiE;AAC7D,QAAIf,aAAatI,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAjB;AAEA,WAAO,IAAIkD,OAAJ,CAAY,CAACW,OAAD,EAAUC,MAAV,KAAqB;AACpC,UAAI2D,kBAAkBI,UAAlB,CAA6BC,UAA7B,CAAJ,EAA8C;AAC1C,cAAME,QAAQP,kBAAkBM,GAAlB,CAAsBD,UAAtB,CAAd;;AAEA,YAAIE,KAAJ,EAAW;AACP,iBAAOnE,QAAQmE,KAAR,CAAP;AACH;AACJ,OAPmC,CASpC;;;AACA,YAAM4B,IAAIjB,gBAAgBjJ,MAAhB,EAAwBM,QAAxB,EAAkC,UAAlC,EAA8C6I,aAA9C,CAAV;AACA,YAAMgB,IAAIlB,gBAAgBjJ,MAAhB,EAAwBM,QAAxB,EAAkC,UAAlC,EAA8C6I,aAA9C,CAAV;AAAuE;AACvE,YAAMiB,IAAInB,gBAAgBjJ,MAAhB,EAAwBM,QAAxB,EAAkC,UAAlC,EAA8C6I,aAA9C,CAAV;AAAuE;AAEvE,YAAMkB,WAAW,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAjB;AAEA5G,cAAQC,GAAR,CAAY4G,QAAZ,EAAsBrI,IAAtB,CAA4BsI,IAAD,IAAU;AACjChC,gBAAQ;AACJiC,eAAKD,KAAK,CAAL,CADD;AAEJE,iBAAOF,KAAK,CAAL,CAFH;AAGJG,gBAAMH,KAAK,CAAL;AAHF,SAAR,CADiC,CAOjC;;AACAhC,cAAMK,GAAN,GAAYP,UAAZ;AACAL,0BAAkBW,GAAlB,CAAsBJ,KAAtB;AAEAnE,gBAAQmE,KAAR;AACH,OAZD;AAaH,KA7BM,CAAP;AA8BH,GAjCD;AAAA;;AAmCA,SAASoC,wBAAT,CAAkCC,OAAlC,EAA2C;AACvC,QAAMC,6BAA6B;AAC/B,gBAAY,iBADmB;AAE/B,gBAAY;AAFmB,GAAnC;;AAKA,MAAG,CAACD,OAAD,IAAY,CAACA,QAAQ3B,KAArB,IAA8B,CAAC2B,QAAQ3B,KAAR,CAAc1J,MAAhD,EAAwD;AACpD;AACH;;AAED,QAAMuL,QAAQF,QAAQ3B,KAAR,CAAc,CAAd,CAAd;AACA,SAAO4B,2BAA2BC,KAA3B,CAAP;AACH;;AAED,SAASC,0BAAT,CAAoCxK,QAApC,EAA8C;AAC1C,QAAMyK,WAAWjL,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAjB;;AAEA,MAAIyK,aAAa,IAAjB,EAAuB;AACnB;AACH;;AAED,QAAMC,0BAA0B1K,SAAS,UAAT,CAAhC;;AACA,MAAK0K,4BAA4B7D,SAA7B,IAA2C,CAAC6D,wBAAwBhC,KAApE,IAA6E,CAACgC,wBAAwBhC,KAAxB,CAA8B1J,MAAhH,EAAwH;AACpH;AACH;;AAED,QAAM2L,kCAAkCD,wBAAwBhC,KAAxB,CAA8B,CAA9B,CAAxC;AACA,SAAO;AACHkC,kCAA8BpL,SAASU,SAAT,CAAmByK,gCAAgC,UAAhC,CAAnB,CAD3B;AAEHE,2BAAuBrL,SAASiD,SAAT,CAAmBkI,gCAAgC,UAAhC,CAAnB,CAFpB;AAGHG,0BAAsBtL,SAASiD,SAAT,CAAmBkI,gCAAgC,UAAhC,CAAnB;AAHnB,GAAP;AAKH;;AAED,SAASI,qBAAT,CAAgCpJ,IAAhC,EAAsC;AAClC,QAAMqJ,mBAAmBxL,SAASU,SAAT,CAAmByB,KAAK,UAAL,CAAnB,CAAzB;;AAEA,UAAQqJ,gBAAR;AACI,SAAK,iBAAL;AACI,aAAO,oBAAP;;AACJ,SAAK,iBAAL;AACG,aAAO,uBAAP;;AACH;AACI,aAAO,EAAP;AANR;AAQH;;AAED,MAAMC,kBAAmBtJ,IAAD,IAAUA,KAAK+G,KAAL,CAAW,CAAX,KAAiB,EAAnD;;AAEA,MAAMwC,mBAAoBvJ,IAAD,IAAWA,KAAK,UAAL,KAAqB,GAAEnC,SAASU,SAAT,CAAmByB,KAAK,UAAL,EAAiB+G,KAAjB,CAAuB,CAAvB,EAA0B,UAA1B,CAAnB,CAA0D,KAAlF,IAA2F,EAA9H;;AAEA,SAASyC,cAAT,CAAyBxJ,IAAzB,EAA+B;AAC3B,UAAQnC,SAASU,SAAT,CAAmByB,KAAK,UAAL,CAAnB,CAAR;AAAgD;AAC5C,SAAK,MAAL;AACI,YAAMyJ,cAAcH,gBAAgBtJ,KAAK,UAAL,CAAhB,CAApB;AACA,YAAM0J,mBAAmB7L,SAASU,SAAT,CAAmBkL,YAAY,UAAZ,CAAnB,CAAzB;AACA,YAAME,qBAAqB9L,SAASU,SAAT,CAAmBkL,YAAY,UAAZ,CAAnB,CAA3B;AACA,YAAMG,mBAAmB/L,SAASU,SAAT,CAAmBkL,YAAY,UAAZ,CAAnB,CAAzB;AACA,aAAQ,GAAEE,kBAAmB,KAAID,gBAAiB,KAAIE,gBAAiB,GAAvE;;AAEJ,SAAK,OAAL;AACI,aAAO/L,SAAS8C,OAAT,CAAiBX,KAAK,UAAL,CAAjB,CAAP;;AAEJ,SAAK,MAAL;AACI,aAAOnC,SAASU,SAAT,CAAmByB,KAAK,UAAL,CAAnB,CAAP;;AAEJ,SAAK,QAAL;AACI,aAAOnC,SAASU,SAAT,CAAmByB,KAAK,UAAL,CAAnB,CAAP;;AAEJ,SAAK,KAAL;AACI,YAAM6J,WAAWhM,SAASU,SAAT,CAAmB+K,gBAAgBtJ,KAAK,UAAL,CAAhB,EAAkC,UAAlC,CAAnB,CAAjB;AACA,YAAM8J,YAAYjM,SAASU,SAAT,CAAmB+K,gBAAgBA,gBAAgBtJ,KAAK,UAAL,CAAhB,EAAkC,UAAlC,CAAhB,EAA+D,UAA/D,CAAnB,CAAlB;AACA,aAAQ,GAAE6J,QAAS,IAAGC,SAAU,EAAhC;AApBR;AAsBH;;AAED,SAASC,mBAAT,CAA6B/J,IAA7B,EAAmC;AAC/B,QAAM4I,QAAQY,eAAexJ,IAAf,CAAd;;AAEA,MAAI4I,KAAJ,EAAW;AACP,WAAOQ,sBAAsBpJ,IAAtB,IAA8BuJ,iBAAiBvJ,IAAjB,CAA9B,GAAuD4I,KAA9D;AACH;AACJ;;AAED,SAASoB,wBAAT,CAAkChK,IAAlC,EAAwCiK,MAAxC,EAAgD;AAC5C,MAAI,CAACjK,KAAK,UAAL,EAAiB+G,KAAtB,EAA6B;AACzB;AACH;;AAED,QAAMmD,QAAQlK,KAAK,UAAL,EAAiB+G,KAAjB,CAAuBtF,GAAvB,CAA2B0I,QAAQC,aAAaD,IAAb,CAAnC,EAAuDzK,MAAvD,CAA8DyK,QAAQA,IAAtE,CAAd;;AAEA,MAAID,MAAM7M,MAAV,EAAkB;AACd,UAAMJ,SAAS;AACXiN;AADW,KAAf;;AAIA,QAAID,MAAJ,EAAY;AACRhN,aAAOgN,MAAP,GAAgBA,MAAhB;AACH;;AAED,WAAOhN,MAAP;AACH;AACJ;AAED;;;;;;;;AAOA,SAASmN,YAAT,CAAsB/L,QAAtB,EAAgC;AAC5B,MAAIA,SAAS,UAAT,CAAJ,EAA0B;AAAE;AACxB,QAAIR,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,MAA6C,WAAjD,EAA8D;AAC1D,YAAM4L,SAASpM,SAASU,SAAT,CAAmB+K,gBAAgBjL,SAAS,UAAT,CAAhB,EAAsC,UAAtC,CAAnB,CAAf,CAD0D,CAC4B;;AACtF,aAAO2L,yBAAyB3L,QAAzB,EAAmC4L,MAAnC,CAAP;AACH;;AAED,WAAOF,oBAAoB1L,QAApB,CAAP;AACH;;AAED,MAAIA,SAAS,UAAT,CAAJ,EAA0B;AAAE;AACxB,WAAO2L,yBAAyB3L,QAAzB,CAAP;AACH;AACJ;;AAED,SAASgM,WAAT,CAAqBhM,QAArB,EAA+B;AAC3B,QAAMyK,WAAWjL,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAjB;AACA,SAAOyK,YAAa,CAAC,CAACzK,SAAS,UAAT,CAAF,IAA0B,IAAvC,IAAgD6G,SAAvD,CAF2B,CAEuC;AACrE;;AAED,SAASoF,kBAAT,CAA4BjM,QAA5B,EAAsC;AAClC,QAAMuE,OAAO/E,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAb;AACA,QAAMmI,OAAO3I,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAb;;AAEA,MAAIuE,QAAQ4D,IAAZ,EAAkB;AACd,WAAQ,GAAE5D,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,IAAG3H,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,IAAG3H,KAAK2H,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,IAAG/D,KAAK+D,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,IAAG/D,KAAK+D,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,IAAG/D,KAAK+D,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAkB,EAArI;AACH;AACJ;AAED;;;;;;;;;;;;AAUA,SAAezM,yBAAf,CAAyCC,MAAzC,EAAiDC,gBAAjD,EAAmEC,UAAnE;AAAA,kCAA+E;AAC3E,QAAI,CAACA,WAAWZ,MAAhB,EAAwB;AACpB;AACH;;AAED,UAAMmD,aAAavC,WAAW,CAAX,CAAnB;;AACA,QAAI,CAACuC,UAAL,EAAiB;AACb;AACH;;AAED,UAAMC,YAAY;AACdtC,kBAAY,EADE;AAEdH,sBAFc;AAGda,mBAAad,OAAOc,WAHN;AAId6B,mBAAa7C,SAAS8C,OAAT,CAAiBH,WAAW,UAAX,CAAjB,CAJC;AAKdI,iBAAW/C,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CALG;AAMdK,kBAAYhD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CANE;AAOdO,mBAAalD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CAPC;AAQdQ,qBAAenD,SAASiD,SAAT,CAAmBN,WAAW,UAAX,CAAnB,CARD;AASdS,uBAAiBpD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CATH;AAUdU,iBAAWrD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAVG;AAWdW,kBAAYtD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAXE;AAYdY,wBAAkBvD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAZJ;AAada,kBAAYxD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAbE;AAcdxC,wBAAkBH,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB,CAdJ;AAedc,uBAAiBzD,SAASU,SAAT,CAAmBiC,WAAW,UAAX,CAAnB;AAfH,KAAlB;AAkBA,UAAMtC,YAAY,EAAlB;AAEA,kBAAMqD,QAAQC,GAAR,CAAYvD,WAAWwD,GAAX,CAAe,UAAepD,QAAf;AAAA,sCAAyB;AACtD,cAAMC,oBAAoBT,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAA1B;AACA,YAAIG,SAASN,UAAUI,iBAAV,CAAb;AACA,cAAMwK,WAAWuB,YAAYhM,QAAZ,CAAjB;;AAEA,YAAI,CAACG,MAAL,EAAa;AACTA,mBAAS;AACLgM,+BAAmB3M,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CADd;AAELyK,oBAFK;AAGLxK,+BAAmBA,iBAHd;AAILG,0BAAcZ,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAJT;AAKLoM,wBAAY5M,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CALP;AAMLqM,wBAAY7M,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CANP;AAOLK,uBAAW;AAPN,WAAT;AASAR,oBAAUI,iBAAV,IAA+BE,MAA/B;AACAiC,oBAAUtC,UAAV,CAAqBb,IAArB,CAA0BkB,MAA1B;AACH;;AAED,cAAMG,iBAAiBd,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAvB;AACA,cAAMqD,UAAUiF,qBAAqB5I,MAArB,EAA6BC,gBAA7B,EAA+CM,iBAA/C,EAAkEK,cAAlE,CAAhB;AACA,cAAM2B,gBAAgBH,uBAAuBpC,MAAvB,EAA+BC,gBAA/B,EAAiDM,iBAAjD,EAAoEK,cAApE,CAAtB;AACA,cAAMgD,YAAYvB,4BAA4BrC,MAA5B,EAAoCC,gBAApC,EAAsDM,iBAAtD,EAAyEK,cAAzE,CAAlB;AACA,cAAMiD,kBAAkB;AACpB+I,2BAAiBP,aAAa/L,QAAb,CADG;AAEpBuM,0BAAgB/M,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAFI;AAGpBwM,wBAAchN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAHM;AAIpByM,4BAAkBjN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAJE;AAKpB0M,2BAAiBT,mBAAmBjM,QAAnB,CALG;AAMpB2M,qBAAWnN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CANS;AAOpBS,uBAAajB,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAPO;AAQpByK,kBARoB;AASpBnK,wBAToB;AAUpBI,0BAAgBlB,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAVI;AAWpB4M,gCAAsBpN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAXF;AAYpB6M,mCAAyBrN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAZL;AAapB8M,+BAAqBtN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAbD;AAcpB+M,yBAAevN,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAdK;AAepBgN,2BAAiBxN,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAfG;AAgBpBiN,qCAA2BzN,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAhBP;AAiBpBkN,+BAAqB1N,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAjBD;AAkBpBmN,gBAAM3N,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAlBc;AAmBpBoN,mBAAS5N,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAnBW;AAoBpBqN,wBAAc7N,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CApBM;AAqBpBsN,4BAAkB9N,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CArBE;AAsBpBuN,yBAAe/N,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAtBK;AAuBpBwN,sBAAYhO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAvBQ;AAwBpByN,mBAASjO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAxBW;AAyBpB0N,+BAAqBlO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAzBD;AA0BpB2N,8BAAoBnO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CA1BA;AA2BpB4N,6BAAmBpO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CA3BC;AA4BpB6N,wBAAcrO,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA5BM;AA6BpB8N,uBAAatO,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA7BO;AA8BpB+N,4BAAkBvO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CA9BE;AA+BpBgO,wBAAcxO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CA/BM;AAgCpBiO,uBAAazO,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAhCO;AAiCpBkO,kCAAwB1F,0BAA0BxI,QAA1B,CAjCJ;AAkCpBmO,sBAAY3O,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAlCQ;AAmCpBoO,wBAAc5O,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAnCM;AAoCpBqO,+BAAqB7O,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CApCD;AAqCpBsO,0BAAgB9O,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CArCI;AAsCpBuO,iCAAuBnE,yBAAyBpK,SAAS,UAAT,CAAzB,CAtCH;AAuCpBwO,qBAAWhP,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAvCS;AAwCpByO,2BAAiB/P,gBAAgBc,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAhB,CAxCG;AAyCpB0O,0BAAgBlP,SAASiD,SAAT,CAAmBzC,SAAS,UAAT,CAAnB,CAzCI;AA0CpB2O,iCAAuBnP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA1CH;AA2CpB4O,iCAAuBpP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA3CH;AA4CpB6O,sCAA4BrP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA5CR;AA6CpB8O,uCAA6BtP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA7CT;AA8CpB+O,sBAAYvP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA9CQ;AA+CpBgP,8BAAoBxP,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CA/CA;AAgDpB0K,mCAAyBF,2BAA2BxK,QAA3B,CAhDL;AAiDpBiC,yBAAeA,aAjDK;AAkDpBoB,mBAASG,UAAUC,UAAV,CAAqBJ,OAArB,EAA8B3D,MAA9B,CAlDW;AAmDpB4D,qBAAWE,UAAUC,UAAV,CAAqBH,SAArB,EAAgC5D,MAAhC,CAnDS;AAoDpBgE,0BAAgBhE,OAAOgE,cApDH;AAqDpBC,8BAAoBjE,OAAOiE;AArDP,SAAxB,CAvBsD,CA+EtD;;AACA,YAAIJ,gBAAgB0J,yBAAhB,KAA8C,eAAlD,EAAmE;AAC/D,gBAAMgC,uCAAuCvQ,gBAAgBc,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAhB,CAA7C;AACA,gBAAMkP,yCAAyCxQ,gBAAgBc,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAhB,CAA/C;AACA,gBAAMmP,wCAAwCzQ,gBAAgBc,SAASU,SAAT,CAAmBF,SAAS,UAAT,CAAnB,CAAhB,CAA9C;AACA,gBAAMoP,yBAAiBzF,iBAAiBjK,MAAjB,EAAyBM,QAAzB,EAAmCiP,oCAAnC,CAAjB,CAAN;;AAEA,cAAIG,QAAJ,EAAc;AACV,gBAAIA,SAAS/G,GAAb,EAAkB;AACd9E,8BAAgB8L,0BAAhB,GAA6CD,SAAS/G,GAAtD;AACH;;AAED9E,4BAAgB+L,8BAAhB,GAAiDF,SAASnF,GAA1D;AACA1G,4BAAgBgM,gCAAhB,GAAmDH,SAASlF,KAA5D;AACA3G,4BAAgBiM,+BAAhB,GAAkDJ,SAASjF,IAA3D;AACA5G,4BAAgB0L,oCAAhB,GAAuDA,oCAAvD;AACA1L,4BAAgB2L,sCAAhB,GAAyDA,sCAAzD;AACA3L,4BAAgB4L,qCAAhB,GAAwDA,qCAAxD;AACH;AACJ;;AAEDhP,eAAOE,SAAP,CAAiBpB,IAAjB,CAAsBsE,eAAtB;AACH,OArGgC;AAAA,KAAf,CAAZ,CAAN;AAsGA,WAAOnB,SAAP;AACH,GArID;AAAA;AAuIA;;;;;;;;;AAOAjE,KAAKK,OAAL,CAAaW,QAAb,CAAsBE,IAAtB,CAA2BuE,gBAA3B,GAA8C,UAAelE,MAAf,EAAuBC,gBAAvB;AAAA,kCAAyC;AACnF,UAAMiB,SAAS;AACXC,WAAKnB,OAAOmC,QADD;AAEXd,eAAS5C,KAAKqB,QAAL,CAAcwB,sBAAd;AAFE,KAAf;AAIA,UAAMC,WAAW,IAAI3B,eAAe4B,GAAf,CAAmB5B,cAAvB,CAAsCsB,MAAtC,CAAjB;AACA,UAAMW,UAAU;AACZC,wBAAkB7B;AADN,KAAhB;AAIA,WAAOsB,SAASwO,qBAAT,CAA+BlO,OAA/B,EAAwCG,IAAxC,CAA6C9C,UAAU;AAC1D,aAAOa,0BAA0BC,MAA1B,EAAkCC,gBAAlC,EAAoDf,MAApD,CAAP;AACH,KAFM,CAAP;AAGH,GAb6C;AAAA,CAA9C,C;;;;;;;;;;;AC1dAR,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb;AAAmCF,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,E;;;;;;;;;;;ACAnC,IAAI4F,MAAJ;AAAW9F,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAAC4F,SAAO3F,CAAP,EAAS;AAAC2F,aAAO3F,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIJ,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAGnF2F,OAAOwL,OAAP,CAAe;AACX;;;;AAIAC,oBAAkB,UAAShQ,gBAAT,EAA2B;AACzCxB,SAAKyR,GAAL,CAASC,IAAT,CAAc,sBAAd,EAAsClQ,gBAAtC,EADyC,CAGzC;AACA;;AACA,UAAMD,SAASvB,KAAK2R,OAAL,CAAaC,gBAAb,EAAf;;AACA,QAAI,CAACrQ,MAAL,EAAa;AACT,YAAM,IAAIwE,OAAO8L,KAAX,CAAiB,wBAAjB,EAA2C,qEAA3C,CAAN;AACH;;AAED,QAAI;AACA,UAAItQ,OAAOuQ,IAAP,KAAgB,UAApB,EAAgC;AAC5B,YAAGvQ,OAAOwQ,cAAP,KAAyB,MAA5B,EAAoC;AAChC,iBAAO/R,KAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BwE,gBAA3B,CAA4ClE,MAA5C,EAAoDC,gBAApD,CAAP;AACH,SAFD,MAEO;AACH,iBAAOxB,KAAKK,OAAL,CAAaW,QAAb,CAAsBE,IAAtB,CAA2BuE,gBAA3B,CAA4ClE,MAA5C,EAAoDC,gBAApD,CAAP;AACH;AACJ,OAND,MAMO,IAAID,OAAOuQ,IAAP,KAAgB,OAApB,EAA6B;AAChC,eAAO9R,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,CAA4BvM,gBAA5B,CAA6CjE,gBAA7C,CAAP;AACH;AACJ,KAVD,CAUE,OAAOyQ,KAAP,EAAc;AACZjS,WAAKyR,GAAL,CAASS,KAAT;AAEA,YAAMD,KAAN;AACH;AACJ;AA9BU,CAAf,E;;;;;;;;;;;ACHAhS,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb;AAA+CF,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb,E;;;;;;;;;;;ACA/C,IAAI4F,MAAJ;AAAW9F,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAAC4F,SAAO3F,CAAP,EAAS;AAAC2F,aAAO3F,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIJ,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAGnF2F,OAAOwL,OAAP,CAAe;AACX;;;;;AAKAY,kBAAgBjP,MAAhB,EAAwB;AACpB;AACA;AACA,UAAM3B,SAASvB,KAAK2R,OAAL,CAAaC,gBAAb,EAAf;;AAEA,QAAI,CAACrQ,MAAL,EAAa;AACT,YAAM,IAAIwE,OAAO8L,KAAX,CAAiB,wBAAjB,EAA2C,qEAA3C,CAAN;AACH;;AAED,QAAI;AACA,UAAItQ,OAAOuQ,IAAP,KAAgB,UAApB,EAAgC;AAC5B,eAAO9R,KAAKK,OAAL,CAAaW,QAAb,CAAsBC,IAAtB,CAA2BmI,OAA3B,CAAmC7H,MAAnC,EAA2C2B,MAA3C,CAAP;AACH,OAFD,MAEO,IAAI3B,OAAOuQ,IAAP,KAAgB,OAApB,EAA6B;AAChC,eAAO9R,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,CAA4B5I,OAA5B,CAAoClG,MAApC,CAAP;AACH;AACJ,KAND,CAME,OAAO+O,KAAP,EAAc;AACZjS,WAAKyR,GAAL,CAASS,KAAT;AAEA,YAAMD,KAAN;AACH;AACJ;;AA1BU,CAAf,E;;;;;;;;;;;ACHAhS,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb;AAAwCF,OAAOC,KAAP,CAAaC,QAAQ,sBAAR,CAAb;AAA8CF,OAAOC,KAAP,CAAaC,QAAQ,oBAAR,CAAb;AAA4CF,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb;AAAqDF,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,E;;;;;;;;;;;ACAvL,IAAIH,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAETJ,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,GAA8B,EAA9B,C;;;;;;;;;;;ACFA,IAAIhS,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAI4R,KAAJ;AAAU/R,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACiB,UAAQhB,CAAR,EAAU;AAAC4R,YAAM5R,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;;AAGjF;;;;;;;;AAQA,SAASkB,yBAAT,CAAmCG,UAAnC,EAA+CD,gBAA/C,EAAiE;AAC7D,QAAME,YAAY,EAAlB;AACA,QAAMC,aAAa,EAAnB;AAEAF,aAAWG,OAAX,CAAmB,UAASwQ,WAAT,EAAsB;AACrC,UAAMvQ,WAAWuQ,YAAYC,QAAZ,EAAjB,CADqC,CAErC;AACA;AACA;;AACA,UAAMvQ,oBAAoBD,SAAS,UAAT,CAA1B;AACA,QAAIG,SAASN,UAAUI,iBAAV,CAAb,CANqC,CAQrC;AACA;;AACA,QAAI,CAACE,MAAL,EAAa;AACTA,eAAS;AACLF,2BAAmBA,iBADd;AAELG,sBAAcJ,SAAS,UAAT,CAFT;AAGLK,mBAAW;AAHN,OAAT,CADS,CAOT;;AACAR,gBAAUI,iBAAV,IAA+BE,MAA/B;AACAL,iBAAWb,IAAX,CAAgBkB,MAAhB;AACH,KApBoC,CAsBrC;;;AACA,UAAMT,SAASvB,KAAK2R,OAAL,CAAaC,gBAAb,GAAgCU,KAAhC,CAAsC,CAAtC,CAAf;AAEA,UAAMC,aAAahR,OAAOiR,IAAP,GAAc,GAAd,GAAoBjR,OAAOkR,IAA9C;AAEA,UAAMtQ,iBAAiBN,SAAS,UAAT,CAAvB;AACA,UAAMO,MAAMmQ,aAAa,WAAb,GAA2B/Q,gBAA3B,GAA8C,UAA9C,GAA2DM,iBAA3D,GAA+E,aAA/E,GAA+FK,cAA/F,GAAgH,WAA5H,CA5BqC,CA8BrC;;AACAH,WAAOE,SAAP,CAAiBpB,IAAjB,CAAsB;AAClBwB,mBAAaT,SAAS,UAAT,CADK;AAElBM,oBAFkB;AAGlBC,SAHkB;AAIlBG,sBAAgBV,SAAS,UAAT;AAJE,KAAtB;AAMH,GArCD;AAsCA,SAAOF,UAAP;AACH;AAED;;;;;;;AAKA3B,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,CAA4BxP,SAA5B,GAAwC,UAAShB,gBAAT,EAA2B;AAC/D;AACA,QAAMf,SAASuR,MAAMU,iBAAN,CAAwBlR,gBAAxB,CAAf;AAEA,SAAO;AACHA,sBAAkBA,gBADf;AAEHG,gBAAYL,0BAA0Bb,MAA1B,EAAkCe,gBAAlC;AAFT,GAAP;AAIH,CARD,C;;;;;;;;;;;AC7DA,IAAIxB,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIG,eAAJ;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,sDAAR,CAAb,EAA6E;AAACI,kBAAgBH,CAAhB,EAAkB;AAACG,sBAAgBH,CAAhB;AAAkB;;AAAtC,CAA7E,EAAqH,CAArH;AAAwH,IAAI4R,KAAJ;AAAU/R,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACiB,UAAQhB,CAAR,EAAU;AAAC4R,YAAM5R,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;;AAI7N;;;;;;;AAOA,SAASuS,QAAT,CAAkBzG,OAAlB,EAA2B0G,YAA3B,EAAyC;AACrC,MAAI,CAAC1G,OAAD,IAAY,CAACA,QAAQE,KAAzB,EAAgC;AAC5B,WAAOwG,YAAP;AACH;;AAED,SAAO1G,QAAQE,KAAf;AACH;AAED;;;;;;;;;;AAQA,SAAS/B,yBAAT,CAAmCxI,QAAnC,EAA6C;AACzC;AACA;AACA;AACA,QAAMyI,sBAAsBzI,SAAS,UAAT,CAA5B;;AACA,MAAIyI,uBAAuBA,oBAAoBzJ,MAA/C,EAAuD;AACnD,WAAOyJ,oBAAoB,CAApB,EAAuB,UAAvB,CAAP;AACH;AACJ;AAED;;;;;;;;;;;AASA,SAAShJ,yBAAT,CAAmCE,gBAAnC,EAAqDC,UAArD,EAAiE;AAC7DzB,OAAKyR,GAAL,CAASC,IAAT,CAAc,2BAAd;AACA,QAAMhQ,YAAY,EAAlB;AACA,QAAMC,aAAa,EAAnB;;AAEA,MAAI,CAACF,WAAWZ,MAAhB,EAAwB;AACpB;AACH;;AAED,QAAMmD,aAAavC,WAAW,CAAX,EAAc4Q,QAAd,EAAnB;;AACA,MAAI,CAACrO,UAAL,EAAiB;AACb;AACH;;AAED,QAAMC,YAAY;AACdtC,gBAAYA,UADE;AAEduC,iBAAaF,WAAW,UAAX,CAFC;AAGdI,eAAWJ,WAAW,UAAX,CAHG;AAId6O,sBAAkB7O,WAAW,UAAX,CAJJ;AAKd+E,gBAAY/E,WAAW,UAAX,CALE;AAMdS,qBAAiBT,WAAW,UAAX,CANH;AAOdU,eAAWV,WAAW,UAAX,CAPG;AAQdW,gBAAYX,WAAW,UAAX,CARE;AASdY,sBAAkBZ,WAAW,UAAX,CATJ;AAUda,gBAAYb,WAAW,UAAX,CAVE;AAWdxC,sBAAkBwC,WAAW,UAAX,CAXJ;AAYdc,qBAAiBd,WAAW,UAAX;AAZH,GAAlB;AAeAvC,aAAWG,OAAX,CAAmB,UAASwQ,WAAT,EAAsB;AACrC,UAAMvQ,WAAWuQ,YAAYC,QAAZ,EAAjB;AACA,UAAMvQ,oBAAoBD,SAAS,UAAT,CAA1B;AACA,QAAIG,SAASN,UAAUI,iBAAV,CAAb;;AACA,QAAI,CAACE,MAAL,EAAa;AACTA,eAAS;AACLgM,2BAAmBnM,SAAS,UAAT,CADd;AAELyK,kBAAUzK,SAAS,UAAT,CAFL;AAGLC,2BAAmBA,iBAHd;AAILG,sBAAclB,WAAWc,SAAS,UAAT,CAAX,CAJT;AAKLK,mBAAW;AALN,OAAT;AAOAR,gBAAUI,iBAAV,IAA+BE,MAA/B;AACAL,iBAAWb,IAAX,CAAgBkB,MAAhB;AACH;;AAED,UAAMG,iBAAiBN,SAAS,UAAT,CAAvB;AAEA,UAAMuD,kBAAkB;AACpBoJ,iBAAW3M,SAAS,UAAT,CADS;AAEpBS,mBAAaT,SAAS,UAAT,CAFO;AAGpByK,gBAAUzK,SAAS,UAAT,CAHU;AAIpBM,sBAAgBA,cAJI;AAKpBI,sBAAgBxB,WAAWc,SAAS,UAAT,CAAX,CALI;AAMpB4M,4BAAsB5M,SAAS,UAAT,CANF;AAOpB6M,+BAAyB7M,SAAS,UAAT,CAPL;AAQpB8M,2BAAqB9M,SAAS,UAAT,CARD;AASpB0O,sBAAgBxP,WAAWc,SAAS,UAAT,CAAX,CATI;AAUpB+M,qBAAe7N,WAAWc,SAAS,UAAT,CAAX,CAVK;AAWpBiR,qBAAe/R,WAAWc,SAAS,UAAT,CAAX,CAXK;AAYpBgN,uBAAiB9N,WAAWc,SAAS,UAAT,CAAX,CAZG;AAapBiN,iCAA2BjN,SAAS,UAAT,CAbP;AAcpBkN,2BAAqBhO,WAAWc,SAAS,UAAT,CAAX,CAdD;AAepBmN,YAAMjO,WAAWc,SAAS,UAAT,CAAX,CAfc;AAgBpBoN,eAASlO,WAAWc,SAAS,UAAT,CAAX,CAhBW;AAiBpBqN,oBAAcrN,SAAS,UAAT,CAjBM;AAkBpBuN,qBAAerO,WAAWc,SAAS,UAAT,CAAX,CAlBK;AAmBpBwN,kBAAYtO,WAAWc,SAAS,UAAT,CAAX,CAnBQ;AAoBpByN,eAASvO,WAAWc,SAAS,UAAT,CAAX,CApBW;AAqBpB0N,2BAAqBxO,WAAWc,SAAS,UAAT,CAAX,CArBD;AAsBpB6N,oBAAc7N,SAAS,UAAT,CAtBM;AAuBpB8N,mBAAa9N,SAAS,UAAT,CAvBO;AAwBpB+N,wBAAkB7O,WAAWc,SAAS,UAAT,CAAX,CAxBE;AAyBpBgO,oBAAc9O,WAAWc,SAAS,UAAT,CAAX,CAzBM;AA0BpBkO,8BAAwB1F,0BAA0BxI,QAA1B,CA1BJ;AA2BpBmO,kBAAYnO,SAAS,UAAT,CA3BQ;AA4BpBoO,oBAAcpO,SAAS,UAAT,CA5BM;AA6BpBqO,2BAAqBrO,SAAS,UAAT,CA7BD;AA8BpBsO,sBAAgBpP,WAAWc,SAAS,UAAT,CAAX,CA9BI;AA+BpBuO,6BAAuBuC,SAAS9Q,SAAS,UAAT,CAAT,CA/BH;AAgCpBwO,iBAAWtP,WAAWc,SAAS,UAAT,CAAX,CAhCS;AAiCpByO,uBAAiB/P,gBAAgBsB,SAAS,UAAT,CAAhB,CAjCG;AAkCpB2O,6BAAuB3O,SAAS,UAAT,CAlCH;AAmCpB4O,6BAAuB5O,SAAS,UAAT,CAnCH;AAoCpB6O,kCAA4B7O,SAAS,UAAT,CApCR;AAqCpB8O,mCAA6B9O,SAAS,UAAT,CArCT;AAsCpBkR,4BAAsBlR,SAAS,UAAT,CAtCF;AAuCpB+O,kBAAY/O,SAAS,UAAT,CAvCQ;AAwCpBgP,0BAAoBhP,SAAS,UAAT;AAxCA,KAAxB,CAlBqC,CA6DrC;;AACA,UAAMN,SAASvB,KAAK2R,OAAL,CAAaC,gBAAb,EAAf;AACA,UAAM1M,UAAW,GAAE3D,OAAOc,WAAY,8BAA6Bb,gBAAiB,cAAaM,iBAAkB,cAAaK,cAAe,kCAA/I;AACAiD,oBAAgBF,OAAhB,GAA0BG,UAAUC,UAAV,CAAqBJ,OAArB,EAA8B3D,MAA9B,CAA1B;AAEAS,WAAOE,SAAP,CAAiBpB,IAAjB,CAAsBsE,eAAtB;AACH,GAnED;AAqEAnB,YAAUzC,gBAAV,GAA6BA,gBAA7B;AAEA,SAAOyC,SAAP;AACH;AAED;;;;;;;AAKAjE,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,CAA4BvM,gBAA5B,GAA+C,UAASjE,gBAAT,EAA2B;AACtE;AACA,QAAMwR,eAAehT,KAAK2R,OAAL,CAAaC,gBAAb,GAAgCU,KAAhC,CAAsC,CAAtC,CAArB;AACA,QAAMW,sCAAsCD,aAAaC,mCAAzD;AACA,MAAIC,OAAJ,CAJsE,CAMtE;AACA;;AACA,MAAID,wCAAwC,KAA5C,EAAmD;AAC/CC,cAAUlB,MAAMmB,4BAAN,CAAmC3R,gBAAnC,CAAV;AACH,GAFD,MAEO;AACH0R,cAAUlB,MAAMU,iBAAN,CAAwBlR,gBAAxB,CAAV;AACH;;AAED,SAAOF,0BAA0BE,gBAA1B,EAA4C0R,OAA5C,CAAP;AACH,CAfD,C;;;;;;;;;;;AC1JA,IAAInN,MAAJ;AAAW9F,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAAC4F,SAAO3F,CAAP,EAAS;AAAC2F,aAAO3F,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIJ,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAIgT,aAAJ;AAAkBnT,OAAOC,KAAP,CAAaC,QAAQ,sCAAR,CAAb,EAA6D;AAACiT,gBAAchT,CAAd,EAAgB;AAACgT,oBAAchT,CAAd;AAAgB;;AAAlC,CAA7D,EAAiG,CAAjG;AAAoG,IAAI4R,KAAJ;AAAU/R,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACiB,UAAQhB,CAAR,EAAU;AAAC4R,YAAM5R,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;;AAKjR,MAAMiT,aAAa,MAAM;AACrB;AACArB,QAAMsB,UAAN,CAAiBC,KAAjB,GAFqB,CAIrB;;AACA,QAAMhS,SAASvB,KAAK2R,OAAL,CAAaC,gBAAb,EAAf,CALqB,CAOrB;;AACA,MAAIrQ,OAAOuQ,IAAP,KAAgB,OAApB,EAA6B;AACzB;AACH,GAVoB,CAYrB;;;AACA,QAAMQ,QAAQ/Q,OAAO+Q,KAArB;;AACA,MAAI,CAACA,KAAD,IAAU,CAACA,MAAMzR,MAArB,EAA6B;AACzBb,SAAKyR,GAAL,CAASQ,KAAT,CAAe,mBAAmB,0BAAlC;AACA,UAAM,IAAIlM,OAAO8L,KAAX,CAAiB,cAAjB,EAAiC,0BAAjC,CAAN;AACH,GAjBoB,CAmBrB;;;AACA7R,OAAKyR,GAAL,CAASC,IAAT,CAAc,oBAAd;;AACA,MAAI;AACAY,UAAM1Q,OAAN,CAAc4R,QAAQxB,MAAMsB,UAAN,CAAiBG,OAAjB,CAAyBD,IAAzB,CAAtB;AACH,GAFD,CAEE,OAAMvB,KAAN,EAAa;AACXjS,SAAKyR,GAAL,CAASQ,KAAT,CAAe,qBAAqBA,KAApC;AACA,UAAM,IAAIlM,OAAO8L,KAAX,CAAiB,gBAAjB,EAAmCI,KAAnC,CAAN;AACH;AACJ,CA3BD,C,CA6BA;;;AACAlM,OAAO2N,OAAP,CAAe,MAAM;AACjBN,gBAAcO,IAAd,GAAqBC,OAArB,CAA6B;AACzBC,WAAOR,UADkB;AAEzBS,aAAST;AAFgB,GAA7B;AAIH,CALD,E;;;;;;;;;;;ACnCA,IAAIU,MAAJ;AAAW9T,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAAC4T,SAAO3T,CAAP,EAAS;AAAC2T,aAAO3T,CAAP;AAAS;;AAApB,CAA/C,EAAqE,CAArE;AAAwE,IAAIJ,IAAJ;AAASC,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACH,OAAKI,CAAL,EAAO;AAACJ,WAAKI,CAAL;AAAO;;AAAhB,CAAzC,EAA2D,CAA3D;AAA8D,IAAI4R,KAAJ;AAAU/R,OAAOC,KAAP,CAAaC,QAAQ,OAAR,CAAb,EAA8B;AAACiB,UAAQhB,CAAR,EAAU;AAAC4R,YAAM5R,CAAN;AAAQ;;AAApB,CAA9B,EAAoD,CAApD;;AAIpK;;;;;;AAMA,SAASuI,mBAAT,CAA6BlH,UAA7B,EAAyC;AACrC,QAAMpB,UAAU,EAAhB;AAEAoB,aAAWG,OAAX,CAAmB,UAASoS,QAAT,EAAmB;AAClC,UAAMlO,QAAQkO,SAAS3B,QAAT,EAAd;AACAhS,YAAQS,IAAR,CAAa;AACTU,wBAAkBsE,MAAM,UAAN,CADT;AAET;AACApB,iBAAWoB,MAAM,UAAN,CAHF;AAIT8C,iBAAW9C,MAAM,UAAN,CAJF;AAKTrB,uBAAiBqB,MAAM,UAAN,CALR;AAMT+C,8BAAwB/C,MAAM,UAAN,CANf;AAOT;AACA5B,mBAAa4B,MAAM,UAAN,CARJ;AAST1B,iBAAW0B,MAAM,UAAN,CATF;AAUTgD,wBAAkBhD,MAAM,UAAN,CAVT;AAWTiD,kBAAYjD,MAAM,UAAN,CAXH;AAYTjB,kBAAYiB,MAAM,UAAN,CAZH;AAaTkD,eAASlD,MAAM,UAAN,CAbA;AAcTlB,wBAAkBkB,MAAM,UAAN,CAdT;AAeTnB,kBAAYmB,MAAM,UAAN;AAfH,KAAb;AAiBH,GAnBD;AAoBA,SAAOzF,OAAP;AACH;;AAEDL,KAAKK,OAAL,CAAaW,QAAb,CAAsBgR,KAAtB,CAA4B5I,OAA5B,GAAsC,UAASlG,MAAT,EAAiB;AACnDlD,OAAKyR,GAAL,CAASC,IAAT,CAAc,wBAAd;AAEA,MAAIuC,kBAAkB,EAAtB;;AACA,MAAI/Q,OAAOyE,aAAP,IAAwBzE,OAAO0E,WAAnC,EAAgD;AAC5C,UAAMsM,cAAc9N,QAAQ2N,OAAO3N,IAAP,EAAa,YAAb,EAA2B+N,MAA3B,CAAkC,UAAlC,CAA5B;;AACA,UAAMtM,WAAWqM,YAAYhR,OAAOyE,aAAnB,CAAjB;AACA,UAAMI,SAASmM,YAAYhR,OAAO0E,WAAnB,CAAf;AACAqM,sBAAmB,GAAEpM,QAAS,IAAGE,MAAO,EAAxC;AACH,GATkD,CAWnD;;;AACA,MAAIE,YAAY/E,OAAO1B,gBAAP,IAA2B,EAA3C;;AACA,MAAIyG,SAAJ,EAAe;AACXA,gBAAYC,MAAMC,OAAN,CAAcF,SAAd,IAA2BA,UAAUjB,IAAV,EAA3B,GAA8CiB,SAA1D;AACAA,gBAAYA,UAAUG,OAAV,CAAkB,WAAlB,EAA+B,IAA/B,CAAZ;AACH;;AAED,QAAMnB,aAAa;AACf,gBAAYgB,SADG;AAEf,gBAAY/E,OAAOgB,WAFJ;AAGf,gBAAYhB,OAAOkB,SAHJ;AAIf,gBAAYlB,OAAOuB,eAJJ;AAKf,gBAAYwP,eALG;AAMf,gBAAY/Q,OAAO0B,gBANJ;AAOf,gBAAY,EAPG;AAQf,gBAAY,EARG;AASf,gBAAY1B,OAAOqE;AATJ,GAAnB;AAYA,QAAM2L,UAAUlB,MAAMoC,eAAN,CAAsBnN,UAAtB,CAAhB;AACA,SAAO0B,oBAAoBuK,OAApB,CAAP;AACH,CAhCD,C","file":"/packages/ohif_studies.js","sourcesContent":["import { OHIF } from 'meteor/ohif:core';\r\n\r\nOHIF.studies = {};\r\n\r\nrequire('../imports/both');\r\n","require('../imports/server');\r\n","import './lib';\r\nimport './services';\r\n","import './parseFloatArray.js';\r\n","export const parseFloatArray = function(obj) {\r\n    var result = [];\r\n\r\n    if (!obj) {\r\n        return result;\r\n    }\r\n\r\n    var objs = obj.split(\"\\\\\");\r\n    for (var i = 0; i < objs.length; i++) {\r\n        result.push(parseFloat(objs[i]));\r\n    }\r\n\r\n    return result;\r\n};\r\n","import './namespace';\r\n\r\n// DICOMWeb instance, study, and metadata retrieval\r\nimport './qido/instances.js';\r\nimport './qido/studies.js';\r\nimport './qido/retrieveMetadata.js';\r\nimport './wado/retrieveMetadata.js';\r\n","import { OHIF } from 'meteor/ohif:core';\r\n\r\nOHIF.studies.services = {\r\n    QIDO: {},\r\n    WADO: {}\r\n};\r\n","import { OHIF } from 'meteor/ohif:core';\r\nimport DICOMwebClient from 'dicomweb-client';\r\n\r\nconst { DICOMWeb } = OHIF;\r\n\r\n/**\r\n * Parses data returned from a QIDO search and transforms it into\r\n * an array of series that are present in the study\r\n *\r\n * @param server The DICOM server\r\n * @param studyInstanceUid\r\n * @param resultData\r\n * @returns {Array} Series List\r\n */\r\nfunction resultDataToStudyMetadata(server, studyInstanceUid, resultData) {\r\n    var seriesMap = {};\r\n    var seriesList = [];\r\n\r\n    resultData.forEach(function(instance) {\r\n        // Use seriesMap to cache series data\r\n        // If the series instance UID has already been used to\r\n        // process series data, continue using that series\r\n        var seriesInstanceUid = DICOMWeb.getString(instance['0020000E']);\r\n        var series = seriesMap[seriesInstanceUid];\r\n\r\n        // If no series data exists in the seriesMap cache variable,\r\n        // process any available series data\r\n        if (!series) {\r\n            series = {\r\n                seriesInstanceUid: seriesInstanceUid,\r\n                seriesNumber: DICOMWeb.getString(instance['00200011']),\r\n                instances: []\r\n            };\r\n\r\n            // Save this data in the seriesMap cache variable\r\n            seriesMap[seriesInstanceUid] = series;\r\n            seriesList.push(series);\r\n        }\r\n\r\n        // The uri for the dicomweb\r\n        // NOTE: DCM4CHEE seems to return the data zipped\r\n        // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't\r\n        //       know how to parse yet\r\n        //var uri = DICOMWeb.getString(instance['00081190']);\r\n        //uri = uri.replace('wado-rs', 'dicom-web');\r\n\r\n        // manually create a WADO-URI from the UIDs\r\n        // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?\r\n        var sopInstanceUid = DICOMWeb.getString(instance['00080018']);\r\n        var uri = server.wadoUriRoot + '?requestType=WADO&studyUID=' + studyInstanceUid + '&seriesUID=' + seriesInstanceUid + '&objectUID=' + sopInstanceUid + '&contentType=application%2Fdicom';\r\n\r\n        // Add this instance to the current series\r\n        series.instances.push({\r\n            sopClassUid: DICOMWeb.getString(instance['00080016']),\r\n            sopInstanceUid: sopInstanceUid,\r\n            uri: uri,\r\n            instanceNumber: DICOMWeb.getString(instance['00200013'])\r\n        });\r\n    });\r\n    return seriesList;\r\n}\r\n\r\n/**\r\n * Retrieve a set of instances using a QIDO call\r\n * @param server\r\n * @param studyInstanceUid\r\n * @throws ECONNREFUSED\r\n * @returns {{wadoUriRoot: String, studyInstanceUid: String, seriesList: Array}}\r\n */\r\nOHIF.studies.services.QIDO.Instances = function(server, studyInstanceUid) {\r\n    // TODO: Are we using this function anywhere?? Can we remove it?\r\n\r\n    const config = {\r\n        url: server.qidoRoot,\r\n        headers: OHIF.DICOMWeb.getAuthorizationHeader()\r\n    };\r\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\r\n    const queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);\r\n    const options = {\r\n        studyInstanceUID: studyInstanceUid\r\n    };\r\n\r\n    return dicomWeb.searchForInstances(options).then(result => {\r\n        return {\r\n            wadoUriRoot: server.wadoUriRoot,\r\n            studyInstanceUid: studyInstanceUid,\r\n            seriesList: resultDataToStudyMetadata(server, studyInstanceUid, result.data)\r\n        };\r\n    });\r\n};\r\n","\r\nimport { OHIF } from 'meteor/ohif:core';\r\nimport DICOMwebClient from 'dicomweb-client';\r\nconst { DICOMWeb } = OHIF;\r\n\r\n/**\r\n * Creates a URL for a WADO search\r\n *\r\n * @param server\r\n * @param studyInstanceUid\r\n * @returns {string}\r\n */\r\nfunction buildUrl(server, studyInstanceUid) {\r\n    return server.wadoRoot + '/studies?includefield=all&StudyInstanceUID=' + studyInstanceUid;\r\n}\r\n\r\nfunction buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid) {\r\n    return `${server.wadoRoot}/studies/${studyInstanceUid}/series/${seriesInstanceUid}/instances/${sopInstanceUid}`\r\n}\r\n\r\nfunction buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid, frame) {\r\n    const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n    frame = frame != null || 1;\r\n\r\n    return `${baseWadoRsUri}/frames/${frame}`\r\n}\r\n/**\r\n * Parses result data from a QIDO search into Study MetaData\r\n * Returns an object populated with study metadata, including the\r\n * series list.\r\n *\r\n * @param server\r\n * @param studyInstanceUid\r\n * @param resultData\r\n * @returns {{seriesList: Array, patientName: *, patientId: *, accessionNumber: *, studyDate: *, modalities: *, studyDescription: *, imageCount: *, studyInstanceUid: *}}\r\n */\r\nasync function resultDataToStudyMetadata(server, studyInstanceUid, resultData, instancesIn) {\r\n\r\n    const seriesList = [];\r\n\r\n    if (!resultData.length) {\r\n        return;\r\n    }\r\n\r\n    const anInstance = resultData[0];\r\n    if (!anInstance) {\r\n        return;\r\n    }\r\n\r\n    const studyData = {\r\n        seriesList,\r\n        patientName: DICOMWeb.getName(anInstance['00100010']),\r\n        patientId: DICOMWeb.getString(anInstance['00100020']),\r\n        patientAge: DICOMWeb.getNumber(anInstance['00101010']),\r\n        patientSize: DICOMWeb.getNumber(anInstance['00101020']),\r\n        patientWeight: DICOMWeb.getNumber(anInstance['00101030']),\r\n        accessionNumber: DICOMWeb.getString(anInstance['00080050']),\r\n        studyDate: DICOMWeb.getString(anInstance['00080020']),\r\n        modalities: DICOMWeb.getString(anInstance['00080061']),\r\n        studyDescription: DICOMWeb.getString(anInstance['00081030']),\r\n        imageCount: DICOMWeb.getString(anInstance['00201208']),\r\n        studyInstanceUid: DICOMWeb.getString(anInstance['0020000D']),\r\n        institutionName: DICOMWeb.getString(anInstance['00080080'])\r\n    };\r\n    await Promise.all(instancesIn.seriesList.map(async function(seriesMap) {\r\n        var instance = seriesMap.instances[0];\r\n        var seriesInstanceUid = instance.seriesInstanceUid;\r\n        var series = seriesMap[seriesInstanceUid];\r\n        if (!series) {\r\n            series = seriesMap;\r\n            series.instances = [];\r\n            seriesMap[seriesInstanceUid] = series;\r\n            seriesList.push(series);\r\n        }\r\n        const sopInstanceUid = instance.sopInstanceUid;\r\n        const wadouri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n        const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n        const wadorsuri = buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n\r\n        const instanceSummary = instance;\r\n        instanceSummary.baseWadoRsUri=baseWadoRsUri;\r\n        instanceSummary.wadouri=WADOProxy.convertURL(wadouri, server);\r\n        instanceSummary.wadorsuri=WADOProxy.convertURL(wadorsuri, server);\r\n        instanceSummary.imageRendering=server.imageRendering;\r\n        instanceSummary.thumbnailRendering=server.thumbnailRendering;\r\n        series.instances.push(instanceSummary);\r\n    }));\r\n    return studyData;\r\n}\r\n\r\n/**\r\n * Retrieved Study MetaData from a DICOM server using a WADO call\r\n * @param server\r\n * @param studyInstanceUid\r\n * @returns {Promise}\r\n */\r\nOHIF.studies.services.QIDO.RetrieveMetadata = async function(server, studyInstanceUid) {\r\n    const url = buildUrl(server, studyInstanceUid);\r\n    return new Promise((resolve, reject) => {\r\n        DICOMWeb.getJSON(url, server.requestOptions).then(result => {\r\n            OHIF.studies.services.QIDO.Instances(server, studyInstanceUid).then(instances => {\r\n                resultDataToStudyMetadata(server, studyInstanceUid, result, instances).then((study) => {\r\n                    study.wadoUriRoot = server.wadoUriRoot;\r\n                    study.studyInstanceUid = studyInstanceUid;\r\n                    resolve(study);\r\n                }, reject)\r\n            }, reject);\r\n        }, reject);\r\n    });\r\n};\r\n","import { OHIF } from 'meteor/ohif:core';\r\nimport DICOMwebClient from 'dicomweb-client';\r\n\r\nconst { DICOMWeb } = OHIF;\r\n\r\n// TODO: Is there an easier way to do this?\r\nif (Meteor.isServer) {\r\n    var XMLHttpRequest = require('xhr2');\r\n\r\n    global.XMLHttpRequest = XMLHttpRequest;\r\n}\r\n\r\n/**\r\n * Creates a QIDO date string for a date range query\r\n * Assumes the year is positive, at most 4 digits long.\r\n *\r\n * @param date The Date object to be formatted\r\n * @returns {string} The formatted date string\r\n */\r\nfunction dateToString(date) {\r\n    if (!date) return '';\r\n    let year = date.getFullYear().toString();\r\n    let month = (date.getMonth() + 1).toString();\r\n    let day = date.getDate().toString();\r\n    year = '0'.repeat(4 - year.length).concat(year);\r\n    month = '0'.repeat(2 - month.length).concat(month);\r\n    day = '0'.repeat(2 - day.length).concat(day);\r\n    return ''.concat(year, month, day);\r\n}\r\n\r\n/**\r\n * Produces a QIDO URL given server details and a set of specified search filter\r\n * items\r\n *\r\n * @param filter\r\n * @param serverSupportsQIDOIncludeField\r\n * @returns {string} The URL with encoded filter query data\r\n */\r\nfunction getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {\r\n    const commaSeparatedFields = [\r\n     // this is temp  '00081030', // Study Description\r\n     //   '00080060' //Modality\r\n        // Add more fields here if you want them in the result\r\n    ].join(',');\r\n\r\n    const parameters = {\r\n        PatientName: filter.patientName,\r\n        PatientID: filter.patientId,\r\n        AccessionNumber: filter.accessionNumber,\r\n        StudyDescription: filter.studyDescription,\r\n        ModalitiesInStudy: filter.modalitiesInStudy,\r\n        limit: filter.limit,\r\n        offset: filter.offset,\r\n        includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all'\r\n    };\r\n\r\n    // build the StudyDate range parameter\r\n    if (filter.studyDateFrom || filter.studyDateTo) {\r\n        const dateFrom = dateToString(new Date(filter.studyDateFrom));\r\n        const dateTo = dateToString(new Date(filter.studyDateTo));\r\n        parameters.StudyDate = `${dateFrom}-${dateTo}`;\r\n    }\r\n\r\n    // Build the StudyInstanceUID parameter\r\n    if (filter.studyInstanceUid) {\r\n        let studyUids = filter.studyInstanceUid;\r\n        studyUids = Array.isArray(studyUids) ? studyUids.join() : studyUids;\r\n        studyUids = studyUids.replace(/[^0-9.]+/g, '\\\\');\r\n        parameters.StudyInstanceUID = studyUids;\r\n    }\r\n\r\n    // Clean query params of undefined values.\r\n    const params = {};\r\n    Object.keys(parameters).forEach(key => {\r\n        if (parameters[key] !== undefined &&\r\n            parameters[key] !== \"\") {\r\n            params[key] = parameters[key];\r\n        }\r\n    });\r\n\r\n    return params;\r\n}\r\n\r\n/**\r\n * Parses resulting data from a QIDO call into a set of Study MetaData\r\n *\r\n * @param resultData\r\n * @returns {Array} An array of Study MetaData objects\r\n */\r\nfunction resultDataToStudies(resultData) {\r\n    const studies = [];\r\n\r\n    if (!resultData || !resultData.length) return;\r\n\r\n    resultData.forEach(study => studies.push({\r\n        studyInstanceUid: DICOMWeb.getString(study['0020000D']),\r\n        // 00080005 = SpecificCharacterSet\r\n        studyDate: DICOMWeb.getString(study['00080020']),\r\n        studyTime: DICOMWeb.getString(study['00080030']),\r\n        accessionNumber: DICOMWeb.getString(study['00080050']),\r\n        referringPhysicianName: DICOMWeb.getString(study['00080090']),\r\n        // 00081190 = URL\r\n        patientName: DICOMWeb.getName(study['00100010']),\r\n        patientId: DICOMWeb.getString(study['00100020']),\r\n        patientBirthdate: DICOMWeb.getString(study['00100030']),\r\n        patientSex: DICOMWeb.getString(study['00100040']),\r\n        studyId: DICOMWeb.getString(study['00200010']),\r\n        numberOfStudyRelatedSeries: DICOMWeb.getString(study['00201206']),\r\n        numberOfStudyRelatedInstances: DICOMWeb.getString(study['00201208']),\r\n        studyDescription: DICOMWeb.getString(study['00081030']),\r\n        // modality: DICOMWeb.getString(study['00080060']),\r\n        // modalitiesInStudy: DICOMWeb.getString(study['00080061']),\r\n        modalities: DICOMWeb.getString(DICOMWeb.getModalities(study['00080060'], study['00080061']))\r\n    }));\r\n\r\n    return studies;\r\n}\r\n\r\nOHIF.studies.services.QIDO.Studies = (server, filter) => {\r\n    const config = {\r\n        url: server.qidoRoot,\r\n        headers: OHIF.DICOMWeb.getAuthorizationHeader()\r\n    };\r\n\r\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\r\n    const queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);\r\n    const options = {\r\n        queryParams\r\n    };\r\n\r\n    return dicomWeb.searchForStudies(options).then(resultDataToStudies);\r\n};\r\n","import { OHIF } from 'meteor/ohif:core';\r\nimport DICOMwebClient from 'dicomweb-client';\r\n\r\nimport { parseFloatArray } from '../../lib/parseFloatArray';\r\n\r\nconst { DICOMWeb } = OHIF;\r\n\r\n/**\r\n * Simple cache schema for retrieved color palettes.\r\n */\r\nconst paletteColorCache = {\r\n    count: 0,\r\n    maxAge: 24 * 60 * 60 * 1000, // 24h cache?\r\n    entries: {},\r\n    isValidUID: function (paletteUID) {\r\n        return typeof paletteUID === 'string' && paletteUID.length > 0;\r\n    },\r\n    get: function (paletteUID) {\r\n        let entry = null;\r\n        if (this.entries.hasOwnProperty(paletteUID)) {\r\n            entry = this.entries[paletteUID];\r\n            // check how the entry is...\r\n            if ((Date.now() - entry.time) > this.maxAge) {\r\n                // entry is too old... remove entry.\r\n                delete this.entries[paletteUID];\r\n                this.count--;\r\n                entry = null;\r\n            }\r\n        }\r\n        return entry;\r\n    },\r\n    add: function (entry) {\r\n        if (this.isValidUID(entry.uid)) {\r\n            let paletteUID = entry.uid;\r\n            if (this.entries.hasOwnProperty(paletteUID) !== true) {\r\n                this.count++; // increment cache entry count...\r\n            }\r\n            entry.time = Date.now();\r\n            this.entries[paletteUID] = entry;\r\n            // @TODO: Add logic to get rid of old entries and reduce memory usage...\r\n        }\r\n    }\r\n};\r\n\r\n/** Returns a WADO url for an instance\r\n *\r\n * @param studyInstanceUid\r\n * @param seriesInstanceUid\r\n * @param sopInstanceUid\r\n * @returns  {string}\r\n */\r\nfunction buildInstanceWadoUrl(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid) {\r\n    // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though\r\n    const params = [];\r\n\r\n    params.push('requestType=WADO');\r\n    params.push(`studyUID=${studyInstanceUid}`);\r\n    params.push(`seriesUID=${seriesInstanceUid}`);\r\n    params.push(`objectUID=${sopInstanceUid}`);\r\n    params.push('contentType=application/dicom');\r\n    params.push('transferSyntax=*');\r\n\r\n    const paramString = params.join('&');\r\n\r\n    return `${server.wadoUriRoot}?${paramString}`;\r\n}\r\n\r\nfunction buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid) {\r\n    return `${server.wadoRoot}/studies/${studyInstanceUid}/series/${seriesInstanceUid}/instances/${sopInstanceUid}`\r\n}\r\n\r\nfunction buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid, frame) {\r\n    const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n    frame = frame != null || 1;\r\n\r\n    return `${baseWadoRsUri}/frames/${frame}`\r\n}\r\n\r\n/**\r\n * Parses the SourceImageSequence, if it exists, in order\r\n * to return a ReferenceSOPInstanceUID. The ReferenceSOPInstanceUID\r\n * is used to refer to this image in any accompanying DICOM-SR documents.\r\n *\r\n * @param instance\r\n * @returns {String} The ReferenceSOPInstanceUID\r\n */\r\nfunction getSourceImageInstanceUid(instance) {\r\n    // TODO= Parse the whole Source Image Sequence\r\n    // This is a really poor workaround for now.\r\n    // Later we should probably parse the whole sequence.\r\n    var SourceImageSequence = instance['00082112'];\r\n    if (SourceImageSequence && SourceImageSequence.Value && SourceImageSequence.Value.length) {\r\n        return SourceImageSequence.Value[0]['00081155'].Value[0];\r\n    }\r\n}\r\n\r\nfunction getPaletteColor(server, instance, tag, lutDescriptor) {\r\n    const numLutEntries = lutDescriptor[0];\r\n    const bits = lutDescriptor[2];\r\n\r\n    let uri = WADOProxy.convertURL(instance[tag].BulkDataURI, server)\r\n\r\n    // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning\r\n    // incorrect bulk data URIs\r\n    if (server.wadoRoot.indexOf('https') === 0 &&\r\n        !uri.includes('https')) {\r\n        uri = uri.replace('http', 'https');\r\n    }\r\n\r\n    const config = {\r\n        url: server.wadoRoot, //BulkDataURI is absolute, so this isn't used\r\n        headers: OHIF.DICOMWeb.getAuthorizationHeader()\r\n    };\r\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\r\n    const options = {\r\n        BulkDataURI: uri\r\n    };\r\n\r\n    const readUInt16 = (byteArray, position) => {\r\n        return byteArray[position] + (byteArray[position + 1] * 256);\r\n    }\r\n\r\n    const arrayBufferToPaletteColorLUT = (arraybuffer) =>{\r\n        const byteArray = new Uint8Array(arraybuffer);\r\n        const lut = [];\r\n\r\n        for (let i = 0; i < numLutEntries; i++) {\r\n            if (bits === 16) {\r\n                lut[i] = readUInt16(byteArray, i * 2);\r\n            } else {\r\n                lut[i] = byteArray[i];\r\n            }\r\n        }\r\n\r\n        return lut;\r\n    }\r\n\r\n    return dicomWeb.retrieveBulkData(options).then(arrayBufferToPaletteColorLUT)\r\n}\r\n\r\n/**\r\n * Fetch palette colors for instances with \"PALETTE COLOR\" photometricInterpretation.\r\n *\r\n * @param server {Object} Current server;\r\n * @param instance {Object} The retrieved instance metadata;\r\n * @returns {String} The ReferenceSOPInstanceUID\r\n */\r\nasync function getPaletteColors(server, instance, lutDescriptor) {\r\n    let paletteUID = DICOMWeb.getString(instance['00281199']);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (paletteColorCache.isValidUID(paletteUID)) {\r\n            const entry = paletteColorCache.get(paletteUID);\r\n\r\n            if (entry) {\r\n                return resolve(entry);\r\n            }\r\n        }\r\n\r\n        // no entry in cache... Fetch remote data.\r\n        const r = getPaletteColor(server, instance, '00281201', lutDescriptor);\r\n        const g = getPaletteColor(server, instance, '00281202', lutDescriptor);;\r\n        const b = getPaletteColor(server, instance, '00281203', lutDescriptor);;\r\n\r\n        const promises = [r, g, b];\r\n\r\n        Promise.all(promises).then((args) => {\r\n            entry = {\r\n                red: args[0],\r\n                green: args[1],\r\n                blue: args[2]\r\n            };\r\n\r\n            // when paletteUID is present, the entry can be cached...\r\n            entry.uid = paletteUID;\r\n            paletteColorCache.add(entry);\r\n\r\n            resolve(entry);\r\n        });\r\n    });\r\n}\r\n\r\nfunction getFrameIncrementPointer(element) {\r\n    const frameIncrementPointerNames = {\r\n        '00181065': 'frameTimeVector',\r\n        '00181063': 'frameTime'\r\n    };\r\n\r\n    if(!element || !element.Value || !element.Value.length) {\r\n        return;\r\n    }\r\n\r\n    const value = element.Value[0];\r\n    return frameIncrementPointerNames[value];\r\n}\r\n\r\nfunction getRadiopharmaceuticalInfo(instance) {\r\n    const modality = DICOMWeb.getString(instance['00080060']);\r\n\r\n    if (modality !== 'PT') {\r\n        return;\r\n    }\r\n\r\n    const radiopharmaceuticalInfo = instance['00540016'];\r\n    if ((radiopharmaceuticalInfo === undefined) || !radiopharmaceuticalInfo.Value || !radiopharmaceuticalInfo.Value.length) {\r\n        return;\r\n    }\r\n\r\n    const firstPetRadiopharmaceuticalInfo = radiopharmaceuticalInfo.Value[0];\r\n    return {\r\n        radiopharmaceuticalStartTime: DICOMWeb.getString(firstPetRadiopharmaceuticalInfo['00181072']),\r\n        radionuclideTotalDose: DICOMWeb.getNumber(firstPetRadiopharmaceuticalInfo['00181074']),\r\n        radionuclideHalfLife: DICOMWeb.getNumber(firstPetRadiopharmaceuticalInfo['00181075'])\r\n    };\r\n}\r\n\r\nfunction getRelationshipString (data) {\r\n    const relationshipType = DICOMWeb.getString(data['0040A010']);\r\n\r\n    switch (relationshipType) {\r\n        case 'HAS CONCEPT MOD':\r\n            return 'Concept modifier: ';\r\n        case 'HAS OBS CONTEXT':\r\n           return 'Observation context: ';\r\n        default:\r\n            return '';\r\n    }\r\n}\r\n\r\nconst getNestedObject = (data) => data.Value[0] || {};\r\n\r\nconst getMeaningString = (data) => (data['0040A043'] && `${DICOMWeb.getString(data['0040A043'].Value[0]['00080104'])} = `) || '';\r\n\r\nfunction getValueString (data) {\r\n    switch (DICOMWeb.getString(data['0040A040'])) { // ValueType\r\n        case 'CODE':\r\n            const conceptCode = getNestedObject(data['0040A168']);\r\n            const conceptCodeValue = DICOMWeb.getString(conceptCode['00080100']);\r\n            const conceptCodeMeaning = DICOMWeb.getString(conceptCode['00080104']);\r\n            const schemeDesignator = DICOMWeb.getString(conceptCode['00080102']);\r\n            return `${conceptCodeMeaning} (${conceptCodeValue}, ${schemeDesignator})`;\r\n\r\n        case 'PNAME':\r\n            return DICOMWeb.getName(data['0040A123']);\r\n\r\n        case 'TEXT':\r\n            return DICOMWeb.getString(data['0040A160']);\r\n\r\n        case 'UIDREF':\r\n            return DICOMWeb.getString(data['0040A124']);\r\n\r\n        case 'NUM':\r\n            const numValue = DICOMWeb.getString(getNestedObject(data['0040A300'])['0040A30A']);\r\n            const codeValue = DICOMWeb.getString(getNestedObject(getNestedObject(data['0040A300'])['004008EA'])['00080100']);\r\n            return `${numValue} ${codeValue}`;\r\n    }\r\n}\r\n\r\nfunction constructPlainValue(data) {\r\n    const value = getValueString(data);\r\n\r\n    if (value) {\r\n        return getRelationshipString(data) + getMeaningString(data) + value;\r\n    }\r\n}\r\n\r\nfunction constructContentSequence(data, header) {\r\n    if (!data['0040A730'].Value) {\r\n        return;\r\n    }\r\n\r\n    const items = data['0040A730'].Value.map(item => parseContent(item)).filter(item => item);\r\n\r\n    if (items.length) {\r\n        const result = {\r\n            items\r\n        };\r\n\r\n        if (header) {\r\n            result.header = header;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n/**\r\n * Recursively parses content sequence for structured reports\r\n *\r\n * @param instance The instance\r\n * @returns {Array} Series List\r\n */\r\n\r\nfunction parseContent(instance) {\r\n    if (instance['0040A040']) { // ValueType\r\n        if (DICOMWeb.getString(instance['0040A040']) === 'CONTAINER') {\r\n            const header = DICOMWeb.getString(getNestedObject(instance['0040A043'])['00080104']); // TODO: check with real data\r\n            return constructContentSequence(instance, header);\r\n        }\r\n\r\n        return constructPlainValue(instance);\r\n    }\r\n\r\n    if (instance['0040A730']) { //ContentSequence\r\n        return constructContentSequence(instance);\r\n    }\r\n}\r\n\r\nfunction getModality(instance) {\r\n    const modality = DICOMWeb.getString(instance['00080060']);\r\n    return modality || (!!instance['0040A730'] && 'SR') || undefined; // FIXME: dirty, dirty hack, we use\r\n}\r\n\r\nfunction getContentDateTime(instance) {\r\n    const date = DICOMWeb.getString(instance['00080023']);\r\n    const time = DICOMWeb.getString(instance['00080033']);\r\n\r\n    if (date && time) {\r\n        return `${date.substr(0, 4)}-${date.substr(4, 2)}-${date.substr(6, 2)} ${time.substr(0, 2)}:${time.substr(2, 2)}:${time.substr(4, 2)}`;\r\n    }\r\n}\r\n\r\n/**\r\n * Parses result data from a WADO search into Study MetaData\r\n * Returns an object populated with study metadata, including the\r\n * series list.\r\n *\r\n * @param server\r\n * @param studyInstanceUid\r\n * @param resultData\r\n * @returns {{seriesList: Array, patientName: *, patientId: *, accessionNumber: *, studyDate: *, modalities: *, studyDescription: *, imageCount: *, studyInstanceUid: *}}\r\n */\r\nasync function resultDataToStudyMetadata(server, studyInstanceUid, resultData) {\r\n    if (!resultData.length) {\r\n        return;\r\n    }\r\n\r\n    const anInstance = resultData[0];\r\n    if (!anInstance) {\r\n        return;\r\n    }\r\n\r\n    const studyData = {\r\n        seriesList: [],\r\n        studyInstanceUid,\r\n        wadoUriRoot: server.wadoUriRoot,\r\n        patientName: DICOMWeb.getName(anInstance['00100010']),\r\n        patientId: DICOMWeb.getString(anInstance['00100020']),\r\n        patientAge: DICOMWeb.getNumber(anInstance['00101010']),\r\n        patientSize: DICOMWeb.getNumber(anInstance['00101020']),\r\n        patientWeight: DICOMWeb.getNumber(anInstance['00101030']),\r\n        accessionNumber: DICOMWeb.getString(anInstance['00080050']),\r\n        studyDate: DICOMWeb.getString(anInstance['00080020']),\r\n        modalities: DICOMWeb.getString(anInstance['00080061']),\r\n        studyDescription: DICOMWeb.getString(anInstance['00081030']),\r\n        imageCount: DICOMWeb.getString(anInstance['00201208']),\r\n        studyInstanceUid: DICOMWeb.getString(anInstance['0020000D']),\r\n        institutionName: DICOMWeb.getString(anInstance['00080080'])\r\n    };\r\n\r\n    const seriesMap = {};\r\n\r\n    await Promise.all(resultData.map(async function(instance) {\r\n        const seriesInstanceUid = DICOMWeb.getString(instance['0020000E']);\r\n        let series = seriesMap[seriesInstanceUid];\r\n        const modality = getModality(instance);\r\n\r\n        if (!series) {\r\n            series = {\r\n                seriesDescription: DICOMWeb.getString(instance['0008103E']),\r\n                modality,\r\n                seriesInstanceUid: seriesInstanceUid,\r\n                seriesNumber: DICOMWeb.getNumber(instance['00200011']),\r\n                seriesDate: DICOMWeb.getString(instance['00080021']),\r\n                seriesTime: DICOMWeb.getString(instance['00080031']),\r\n                instances: []\r\n            };\r\n            seriesMap[seriesInstanceUid] = series;\r\n            studyData.seriesList.push(series);\r\n        }\r\n\r\n        const sopInstanceUid = DICOMWeb.getString(instance['00080018']);\r\n        const wadouri = buildInstanceWadoUrl(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n        const baseWadoRsUri = buildInstanceWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n        const wadorsuri = buildInstanceFrameWadoRsUri(server, studyInstanceUid, seriesInstanceUid, sopInstanceUid);\r\n        const instanceSummary = {\r\n            contentSequence: parseContent(instance),\r\n            completionFlag: DICOMWeb.getString(instance['0040A491']),\r\n            manufacturer: DICOMWeb.getString(instance['00080070']),\r\n            verificationFlag: DICOMWeb.getString(instance['0040A493']),\r\n            contentDateTime: getContentDateTime(instance),\r\n            imageType: DICOMWeb.getString(instance['00080008']),\r\n            sopClassUid: DICOMWeb.getString(instance['00080016']),\r\n            modality,\r\n            sopInstanceUid,\r\n            instanceNumber: DICOMWeb.getNumber(instance['00200013']),\r\n            imagePositionPatient: DICOMWeb.getString(instance['00200032']),\r\n            imageOrientationPatient: DICOMWeb.getString(instance['00200037']),\r\n            frameOfReferenceUID: DICOMWeb.getString(instance['00200052']),\r\n            sliceLocation: DICOMWeb.getNumber(instance['00201041']),\r\n            samplesPerPixel: DICOMWeb.getNumber(instance['00280002']),\r\n            photometricInterpretation: DICOMWeb.getString(instance['00280004']),\r\n            planarConfiguration: DICOMWeb.getNumber(instance['00280006']),\r\n            rows: DICOMWeb.getNumber(instance['00280010']),\r\n            columns: DICOMWeb.getNumber(instance['00280011']),\r\n            pixelSpacing: DICOMWeb.getString(instance['00280030']),\r\n            pixelAspectRatio: DICOMWeb.getString(instance['00280034']),\r\n            bitsAllocated: DICOMWeb.getNumber(instance['00280100']),\r\n            bitsStored: DICOMWeb.getNumber(instance['00280101']),\r\n            highBit: DICOMWeb.getNumber(instance['00280102']),\r\n            pixelRepresentation: DICOMWeb.getNumber(instance['00280103']),\r\n            smallestPixelValue: DICOMWeb.getNumber(instance['00280106']),\r\n            largestPixelValue: DICOMWeb.getNumber(instance['00280107']),\r\n            windowCenter: DICOMWeb.getString(instance['00281050']),\r\n            windowWidth: DICOMWeb.getString(instance['00281051']),\r\n            rescaleIntercept: DICOMWeb.getNumber(instance['00281052']),\r\n            rescaleSlope: DICOMWeb.getNumber(instance['00281053']),\r\n            rescaleType: DICOMWeb.getNumber(instance['00281054']),\r\n            sourceImageInstanceUid: getSourceImageInstanceUid(instance),\r\n            laterality: DICOMWeb.getString(instance['00200062']),\r\n            viewPosition: DICOMWeb.getString(instance['00185101']),\r\n            acquisitionDateTime: DICOMWeb.getString(instance['0008002A']),\r\n            numberOfFrames: DICOMWeb.getNumber(instance['00280008']),\r\n            frameIncrementPointer: getFrameIncrementPointer(instance['00280009']),\r\n            frameTime: DICOMWeb.getNumber(instance['00181063']),\r\n            frameTimeVector: parseFloatArray(DICOMWeb.getString(instance['00181065'])),\r\n            sliceThickness: DICOMWeb.getNumber(instance['00180050']),\r\n            lossyImageCompression: DICOMWeb.getString(instance['00282110']),\r\n            derivationDescription: DICOMWeb.getString(instance['00282111']),\r\n            lossyImageCompressionRatio: DICOMWeb.getString(instance['00282112']),\r\n            lossyImageCompressionMethod: DICOMWeb.getString(instance['00282114']),\r\n            echoNumber: DICOMWeb.getString(instance['00180086']),\r\n            contrastBolusAgent: DICOMWeb.getString(instance['00180010']),\r\n            radiopharmaceuticalInfo: getRadiopharmaceuticalInfo(instance),\r\n            baseWadoRsUri: baseWadoRsUri,\r\n            wadouri: WADOProxy.convertURL(wadouri, server),\r\n            wadorsuri: WADOProxy.convertURL(wadorsuri, server),\r\n            imageRendering: server.imageRendering,\r\n            thumbnailRendering: server.thumbnailRendering\r\n        };\r\n\r\n        // Get additional information if the instance uses \"PALETTE COLOR\" photometric interpretation\r\n        if (instanceSummary.photometricInterpretation === 'PALETTE COLOR') {\r\n            const redPaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281101']));\r\n            const greenPaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281102']));\r\n            const bluePaletteColorLookupTableDescriptor = parseFloatArray(DICOMWeb.getString(instance['00281103']));\r\n            const palettes = await getPaletteColors(server, instance, redPaletteColorLookupTableDescriptor);\r\n\r\n            if (palettes) {\r\n                if (palettes.uid) {\r\n                    instanceSummary.paletteColorLookupTableUID = palettes.uid;\r\n                }\r\n\r\n                instanceSummary.redPaletteColorLookupTableData = palettes.red;\r\n                instanceSummary.greenPaletteColorLookupTableData = palettes.green;\r\n                instanceSummary.bluePaletteColorLookupTableData = palettes.blue;\r\n                instanceSummary.redPaletteColorLookupTableDescriptor = redPaletteColorLookupTableDescriptor;\r\n                instanceSummary.greenPaletteColorLookupTableDescriptor = greenPaletteColorLookupTableDescriptor;\r\n                instanceSummary.bluePaletteColorLookupTableDescriptor = bluePaletteColorLookupTableDescriptor;\r\n            }\r\n        }\r\n\r\n        series.instances.push(instanceSummary);\r\n    }));\r\n    return studyData;\r\n}\r\n\r\n/**\r\n * Retrieve Study MetaData from a DICOM server using a WADO call\r\n *\r\n * @param server\r\n * @param studyInstanceUid\r\n * @returns {Promise}\r\n */\r\nOHIF.studies.services.WADO.RetrieveMetadata = async function(server, studyInstanceUid) {\r\n    const config = {\r\n        url: server.wadoRoot,\r\n        headers: OHIF.DICOMWeb.getAuthorizationHeader()\r\n    };\r\n    const dicomWeb = new DICOMwebClient.api.DICOMwebClient(config);\r\n    const options = {\r\n        studyInstanceUID: studyInstanceUid\r\n    };\r\n\r\n    return dicomWeb.retrieveStudyMetadata(options).then(result => {\r\n        return resultDataToStudyMetadata(server, studyInstanceUid, result);\r\n    });\r\n};\r\n","import './methods';\r\nimport './services';\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nMeteor.methods({\r\n    /**\r\n     * Retrieves Study metadata given a Study Instance UID\r\n     * This Meteor method is available from both the client and the server\r\n     */\r\n    GetStudyMetadata: function(studyInstanceUid) {\r\n        OHIF.log.info('GetStudyMetadata(%s)', studyInstanceUid);\r\n\r\n        // Get the server data. This is user-defined in the config.json files or through servers\r\n        // configuration modal\r\n        const server = OHIF.servers.getCurrentServer();\r\n        if (!server) {\r\n            throw new Meteor.Error('improper-server-config', 'No properly configured server was available over DICOMWeb or DIMSE.');\r\n        }\r\n\r\n        try {\r\n            if (server.type === 'dicomWeb') {\r\n                if(server.metadataSource ==='qido') {\r\n                    return OHIF.studies.services.QIDO.RetrieveMetadata(server, studyInstanceUid);\r\n                } else {\r\n                    return OHIF.studies.services.WADO.RetrieveMetadata(server, studyInstanceUid);\r\n                }\r\n            } else if (server.type === 'dimse') {\r\n                return OHIF.studies.services.DIMSE.RetrieveMetadata(studyInstanceUid);\r\n            }\r\n        } catch (error) {\r\n            OHIF.log.trace();\r\n\r\n            throw error;\r\n        }\r\n    }\r\n});\r\n","import './getStudyMetadata.js';\r\nimport './studylistSearch.js';\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nMeteor.methods({\r\n    /**\r\n     * Use the specified filter to conduct a search from the DICOM server\r\n     *\r\n     * @param filter\r\n     */\r\n    StudyListSearch(filter) {\r\n        // Get the server data. This is user-defined in the config.json files or through servers\r\n        // configuration modal\r\n        const server = OHIF.servers.getCurrentServer();\r\n\r\n        if (!server) {\r\n            throw new Meteor.Error('improper-server-config', 'No properly configured server was available over DICOMWeb or DIMSE.');\r\n        }\r\n\r\n        try {\r\n            if (server.type === 'dicomWeb') {\r\n                return OHIF.studies.services.QIDO.Studies(server, filter);\r\n            } else if (server.type === 'dimse') {\r\n                return OHIF.studies.services.DIMSE.Studies(filter);\r\n            }\r\n        } catch (error) {\r\n            OHIF.log.trace();\r\n\r\n            throw error;\r\n        }\r\n    }\r\n});\r\n","import './namespace.js';\r\n\r\n// DIMSE instance, study, and metadata retrieval\r\nimport './dimse/instances.js';\r\nimport './dimse/studies.js';\r\nimport './dimse/retrieveMetadata.js';\r\nimport './dimse/setup.js';\r\n","import { OHIF } from 'meteor/ohif:core';\r\n\r\nOHIF.studies.services.DIMSE = {};\r\n","import { OHIF } from 'meteor/ohif:core';\r\nimport DIMSE from 'dimse';\r\n\r\n/**\r\n * Parses data returned from a study search and transforms it into\r\n * an array of series that are present in the study\r\n *\r\n * @param resultData\r\n * @param studyInstanceUid\r\n * @returns {Array} Series List\r\n */\r\nfunction resultDataToStudyMetadata(resultData, studyInstanceUid) {\r\n    const seriesMap = {};\r\n    const seriesList = [];\r\n\r\n    resultData.forEach(function(instanceRaw) {\r\n        const instance = instanceRaw.toObject();\r\n        // Use seriesMap to cache series data\r\n        // If the series instance UID has already been used to\r\n        // process series data, continue using that series\r\n        const seriesInstanceUid = instance[0x0020000E];\r\n        let series = seriesMap[seriesInstanceUid];\r\n\r\n        // If no series data exists in the seriesMap cache variable,\r\n        // process any available series data\r\n        if (!series) {\r\n            series = {\r\n                seriesInstanceUid: seriesInstanceUid,\r\n                seriesNumber: instance[0x00200011],\r\n                instances: []\r\n            };\r\n\r\n            // Save this data in the seriesMap cache variable\r\n            seriesMap[seriesInstanceUid] = series;\r\n            seriesList.push(series);\r\n        }\r\n\r\n        // TODO: Check which peer it should point to\r\n        const server = OHIF.servers.getCurrentServer().peers[0];\r\n\r\n        const serverRoot = server.host + ':' + server.port;\r\n\r\n        const sopInstanceUid = instance[0x00080018];\r\n        const uri = serverRoot + '/studies/' + studyInstanceUid + '/series/' + seriesInstanceUid + '/instances/' + sopInstanceUid + '/frames/1';\r\n\r\n        // Add this instance to the current series\r\n        series.instances.push({\r\n            sopClassUid: instance[0x00080016],\r\n            sopInstanceUid,\r\n            uri,\r\n            instanceNumber: instance[0x00200013]\r\n        });\r\n    });\r\n    return seriesList;\r\n}\r\n\r\n/**\r\n * Retrieve a set of instances using a DIMSE call\r\n * @param studyInstanceUid\r\n * @returns {{wadoUriRoot: String, studyInstanceUid: String, seriesList: Array}}\r\n */\r\nOHIF.studies.services.DIMSE.Instances = function(studyInstanceUid) {\r\n    //var url = buildUrl(server, studyInstanceUid);\r\n    const result = DIMSE.retrieveInstances(studyInstanceUid);\r\n\r\n    return {\r\n        studyInstanceUid: studyInstanceUid,\r\n        seriesList: resultDataToStudyMetadata(result, studyInstanceUid)\r\n    };\r\n};\r\n","import { OHIF } from 'meteor/ohif:core';\r\nimport { parseFloatArray } from 'meteor/ohif:studies/imports/both/lib/parseFloatArray';\r\nimport DIMSE from 'dimse';\r\n\r\n/**\r\n * Returns the value of the element (e.g. '00280009')\r\n *\r\n * @param element - The group/element of the element (e.g. '00280009')\r\n * @param defaultValue - The default value to return if the element does not exist\r\n * @returns {*}\r\n */\r\nfunction getValue(element, defaultValue) {\r\n    if (!element || !element.value) {\r\n        return defaultValue;\r\n    }\r\n\r\n    return element.value;\r\n}\r\n\r\n/**\r\n * Parses the SourceImageSequence, if it exists, in order\r\n * to return a ReferenceSOPInstanceUID. The ReferenceSOPInstanceUID\r\n * is used to refer to this image in any accompanying DICOM-SR documents.\r\n *\r\n * @param instance\r\n * @returns {String} The ReferenceSOPInstanceUID\r\n */\r\nfunction getSourceImageInstanceUid(instance) {\r\n    // TODO= Parse the whole Source Image Sequence\r\n    // This is a really poor workaround for now.\r\n    // Later we should probably parse the whole sequence.\r\n    const SourceImageSequence = instance[0x00082112];\r\n    if (SourceImageSequence && SourceImageSequence.length) {\r\n        return SourceImageSequence[0][0x00081155];\r\n    }\r\n}\r\n\r\n/**\r\n * Parses result data from a DIMSE search into Study MetaData\r\n * Returns an object populated with study metadata, including the\r\n * series list.\r\n *\r\n * @param studyInstanceUid\r\n * @param resultData\r\n * @returns {{seriesList: Array, patientName: *, patientId: *, accessionNumber: *, studyDate: *, modalities: *, studyDescription: *, imageCount: *, studyInstanceUid: *}}\r\n */\r\nfunction resultDataToStudyMetadata(studyInstanceUid, resultData) {\r\n    OHIF.log.info('resultDataToStudyMetadata');\r\n    const seriesMap = {};\r\n    const seriesList = [];\r\n\r\n    if (!resultData.length) {\r\n        return;\r\n    }\r\n\r\n    const anInstance = resultData[0].toObject();\r\n    if (!anInstance) {\r\n        return;\r\n    }\r\n\r\n    const studyData = {\r\n        seriesList: seriesList,\r\n        patientName: anInstance[0x00100010],\r\n        patientId: anInstance[0x00100020],\r\n        patientBirthDate: anInstance[0x00100030],\r\n        patientSex: anInstance[0x00100040],\r\n        accessionNumber: anInstance[0x00080050],\r\n        studyDate: anInstance[0x00080020],\r\n        modalities: anInstance[0x00080061],\r\n        studyDescription: anInstance[0x00081030],\r\n        imageCount: anInstance[0x00201208],\r\n        studyInstanceUid: anInstance[0x0020000D],\r\n        institutionName: anInstance[0x00080080]\r\n    };\r\n\r\n    resultData.forEach(function(instanceRaw) {\r\n        const instance = instanceRaw.toObject();\r\n        const seriesInstanceUid = instance[0x0020000E];\r\n        let series = seriesMap[seriesInstanceUid];\r\n        if (!series) {\r\n            series = {\r\n                seriesDescription: instance[0x0008103E],\r\n                modality: instance[0x00080060],\r\n                seriesInstanceUid: seriesInstanceUid,\r\n                seriesNumber: parseFloat(instance[0x00200011]),\r\n                instances: []\r\n            };\r\n            seriesMap[seriesInstanceUid] = series;\r\n            seriesList.push(series);\r\n        }\r\n\r\n        const sopInstanceUid = instance[0x00080018];\r\n\r\n        const instanceSummary = {\r\n            imageType: instance[0x00080008],\r\n            sopClassUid: instance[0x00080016],\r\n            modality: instance[0x00080060],\r\n            sopInstanceUid: sopInstanceUid,\r\n            instanceNumber: parseFloat(instance[0x00200013]),\r\n            imagePositionPatient: instance[0x00200032],\r\n            imageOrientationPatient: instance[0x00200037],\r\n            frameOfReferenceUID: instance[0x00200052],\r\n            sliceThickness: parseFloat(instance[0x00180050]),\r\n            sliceLocation: parseFloat(instance[0x00201041]),\r\n            tablePosition: parseFloat(instance[0x00189327]),\r\n            samplesPerPixel: parseFloat(instance[0x00280002]),\r\n            photometricInterpretation: instance[0x00280004],\r\n            planarConfiguration: parseFloat(instance[0x00280006]),\r\n            rows: parseFloat(instance[0x00280010]),\r\n            columns: parseFloat(instance[0x00280011]),\r\n            pixelSpacing: instance[0x00280030],\r\n            bitsAllocated: parseFloat(instance[0x00280100]),\r\n            bitsStored: parseFloat(instance[0x00280101]),\r\n            highBit: parseFloat(instance[0x00280102]),\r\n            pixelRepresentation: parseFloat(instance[0x00280103]),\r\n            windowCenter: instance[0x00281050],\r\n            windowWidth: instance[0x00281051],\r\n            rescaleIntercept: parseFloat(instance[0x00281052]),\r\n            rescaleSlope: parseFloat(instance[0x00281053]),\r\n            sourceImageInstanceUid: getSourceImageInstanceUid(instance),\r\n            laterality: instance[0x00200062],\r\n            viewPosition: instance[0x00185101],\r\n            acquisitionDateTime: instance[0x0008002A],\r\n            numberOfFrames: parseFloat(instance[0x00280008]),\r\n            frameIncrementPointer: getValue(instance[0x00280009]),\r\n            frameTime: parseFloat(instance[0x00181063]),\r\n            frameTimeVector: parseFloatArray(instance[0x00181065]),\r\n            lossyImageCompression: instance[0x00282110],\r\n            derivationDescription: instance[0x00282111],\r\n            lossyImageCompressionRatio: instance[0x00282112],\r\n            lossyImageCompressionMethod: instance[0x00282114],\r\n            spacingBetweenSlices: instance[0x00180088],\r\n            echoNumber: instance[0x00180086],\r\n            contrastBolusAgent: instance[0x00180010]\r\n        };\r\n\r\n        // Retrieve the actual data over WADO-URI\r\n        const server = OHIF.servers.getCurrentServer();\r\n        const wadouri = `${server.wadoUriRoot}?requestType=WADO&studyUID=${studyInstanceUid}&seriesUID=${seriesInstanceUid}&objectUID=${sopInstanceUid}&contentType=application%2Fdicom`;\r\n        instanceSummary.wadouri = WADOProxy.convertURL(wadouri, server);\r\n\r\n        series.instances.push(instanceSummary);\r\n    });\r\n\r\n    studyData.studyInstanceUid = studyInstanceUid;\r\n\r\n    return studyData;\r\n}\r\n\r\n/**\r\n * Retrieved Study MetaData from a DICOM server using DIMSE\r\n * @param studyInstanceUid\r\n * @returns {{seriesList: Array, patientName: *, patientId: *, accessionNumber: *, studyDate: *, modalities: *, studyDescription: *, imageCount: *, studyInstanceUid: *}}\r\n */\r\nOHIF.studies.services.DIMSE.RetrieveMetadata = function(studyInstanceUid) {\r\n    // TODO: Check which peer it should point to\r\n    const activeServer = OHIF.servers.getCurrentServer().peers[0];\r\n    const supportsInstanceRetrievalByStudyUid = activeServer.supportsInstanceRetrievalByStudyUid;\r\n    let results;\r\n\r\n    // Check explicitly for a value of false, since this property\r\n    // may be left undefined in config files\r\n    if (supportsInstanceRetrievalByStudyUid === false) {\r\n        results = DIMSE.retrieveInstancesByStudyOnly(studyInstanceUid);\r\n    } else {\r\n        results = DIMSE.retrieveInstances(studyInstanceUid);\r\n    }\r\n\r\n    return resultDataToStudyMetadata(studyInstanceUid, results);\r\n};\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\nimport { CurrentServer } from 'meteor/ohif:servers/both/collections';\r\nimport DIMSE from 'dimse';\r\n\r\nconst setupDIMSE = () => {\r\n    // Terminate existing DIMSE servers and sockets and clean up the connection object\r\n    DIMSE.connection.reset();\r\n\r\n    // Get the new server configuration\r\n    const server = OHIF.servers.getCurrentServer();\r\n\r\n    // Stop here if the new server is not of DIMSE type\r\n    if (server.type !== 'dimse') {\r\n        return;\r\n    }\r\n\r\n    // Check if peers were defined in the server configuration and throw an error if not\r\n    const peers = server.peers;\r\n    if (!peers || !peers.length) {\r\n        OHIF.log.error('dimse-config: ' + 'No DIMSE Peers provided.');\r\n        throw new Meteor.Error('dimse-config', 'No DIMSE Peers provided.');\r\n    }\r\n\r\n    // Add all the DIMSE peers, establishing the connections\r\n    OHIF.log.info('Adding DIMSE peers');\r\n    try {\r\n        peers.forEach(peer => DIMSE.connection.addPeer(peer));\r\n    } catch(error) {\r\n        OHIF.log.error('dimse-addPeers: ' + error);\r\n        throw new Meteor.Error('dimse-addPeers', error);\r\n    }\r\n};\r\n\r\n// Setup the DIMSE connections on startup or when the current server is changed\r\nMeteor.startup(() => {\r\n    CurrentServer.find().observe({\r\n        added: setupDIMSE,\r\n        changed: setupDIMSE\r\n    });\r\n});\r\n","import { moment } from 'meteor/momentjs:moment';\r\nimport { OHIF } from 'meteor/ohif:core';\r\nimport DIMSE from 'dimse';\r\n\r\n/**\r\n * Parses resulting data from a QIDO call into a set of Study MetaData\r\n *\r\n * @param resultData\r\n * @returns {Array} An array of Study MetaData objects\r\n */\r\nfunction resultDataToStudies(resultData) {\r\n    const studies = [];\r\n\r\n    resultData.forEach(function(studyRaw) {\r\n        const study = studyRaw.toObject();\r\n        studies.push({\r\n            studyInstanceUid: study[0x0020000D],\r\n            // 00080005 = SpecificCharacterSet\r\n            studyDate: study[0x00080020],\r\n            studyTime: study[0x00080030],\r\n            accessionNumber: study[0x00080050],\r\n            referringPhysicianName: study[0x00080090],\r\n            // 00081190 = URL\r\n            patientName: study[0x00100010],\r\n            patientId: study[0x00100020],\r\n            patientBirthdate: study[0x00100030],\r\n            patientSex: study[0x00100040],\r\n            imageCount: study[0x00201208],\r\n            studyId: study[0x00200010],\r\n            studyDescription: study[0x00081030],\r\n            modalities: study[0x00080061]\r\n        });\r\n    });\r\n    return studies;\r\n}\r\n\r\nOHIF.studies.services.DIMSE.Studies = function(filter) {\r\n    OHIF.log.info('Services.DIMSE.Studies');\r\n\r\n    let filterStudyDate = '';\r\n    if (filter.studyDateFrom && filter.studyDateTo) {\r\n        const convertDate = date => moment(date, 'MM/DD/YYYY').format('YYYYMMDD');\r\n        const dateFrom = convertDate(filter.studyDateFrom);\r\n        const dateTo = convertDate(filter.studyDateTo);\r\n        filterStudyDate = `${dateFrom}-${dateTo}`;\r\n    }\r\n\r\n    // Build the StudyInstanceUID parameter\r\n    let studyUids = filter.studyInstanceUid || '';\r\n    if (studyUids) {\r\n        studyUids = Array.isArray(studyUids) ? studyUids.join() : studyUids;\r\n        studyUids = studyUids.replace(/[^0-9.]+/g, '\\\\');\r\n    }\r\n\r\n    const parameters = {\r\n        0x0020000D: studyUids,\r\n        0x00100010: filter.patientName,\r\n        0x00100020: filter.patientId,\r\n        0x00080050: filter.accessionNumber,\r\n        0x00080020: filterStudyDate,\r\n        0x00081030: filter.studyDescription,\r\n        0x00100040: '',\r\n        0x00201208: '',\r\n        0x00080061: filter.modalitiesInStudy\r\n    };\r\n\r\n    const results = DIMSE.retrieveStudies(parameters);\r\n    return resultDataToStudies(results);\r\n};\r\n"]}
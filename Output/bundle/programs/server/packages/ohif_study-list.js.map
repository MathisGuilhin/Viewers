{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:study-list/both/index.js","meteor://ðŸ’»app/packages/ohif:study-list/both/base.js","meteor://ðŸ’»app/packages/ohif:study-list/both/collections.js","meteor://ðŸ’»app/packages/ohif:study-list/server/index.js","meteor://ðŸ’»app/packages/ohif:study-list/server/publications.js","meteor://ðŸ’»app/packages/ohif:study-list/server/methods/importStudies.js","meteor://ðŸ’»app/packages/ohif:study-list/server/methods/index.js"],"names":["module","watch","require","OHIF","v","studylist","collections","actions","export","StudyImportStatus","Mongo","Collection","_debugName","Meteor","publish","find","fs","Npm","fiber","WebApp","connectHandlers","use","req","res","headers","filename","statusCode","end","dicomDir","createFolderIfNotExist","fullFileName","file","createWriteStream","on","error","log","warn","writeHead","pipe","methods","importSupported","server","servers","getCurrentServer","type","importStudies","studiesToImport","studyImportStatusId","importStudiesDIMSE","createStudyImportStatus","studyImportStatus","numberOfStudiesImported","numberOfStudiesFailed","insert","removeStudyImportStatus","id","remove","DIMSE","storeInstances","err","update","_id","$inc","info","fileExists","unlink","run","folder","folderParts","split","folderPart","i","length","folderExists","mkdirSync","statSync","isFile","isDirectory"],"mappings":"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","file":"/packages/ohif_study-list.js","sourcesContent":["import './base.js';\r\nimport './collections.js';\r\n","import { OHIF } from 'meteor/ohif:core';\r\n\r\nOHIF.studylist = {\r\n    collections: {},\r\n    actions: {}\r\n};\r\n","import { Mongo } from 'meteor/mongo';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nconst StudyImportStatus = new Mongo.Collection('studyImportStatus');\r\nStudyImportStatus._debugName = 'StudyImportStatus';\r\nOHIF.studylist.collections.StudyImportStatus = StudyImportStatus;\r\n\r\nexport { StudyImportStatus };\r\n","import './methods';\r\nimport './publications.js';\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nMeteor.publish('studyImportStatus', () => OHIF.studylist.collections.StudyImportStatus.find());\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nconst fs = Npm.require('fs');\r\nconst fiber = Npm.require('fibers');\r\n\r\nWebApp.connectHandlers.use('/uploadFilesToImport', function(req, res) {\r\n    if (!req.headers.filename) {\r\n        //  Response: BAD REQUEST (400)\r\n        res.statusCode = 400;\r\n        res.end();\r\n    }\r\n\r\n    //  Store files in temp location (they will be deleted when their import operations are completed)\r\n    const dicomDir = '/tmp/dicomDir';\r\n    createFolderIfNotExist(dicomDir);\r\n\r\n    const fullFileName = dicomDir + '/' + req.headers.filename;\r\n    const file = fs.createWriteStream(fullFileName);\r\n\r\n    file.on('error', function(error) {\r\n        OHIF.log.warn(error);\r\n        //  Response: INTERNAL SERVER ERROR (500)\r\n        res.statusCode = 400;\r\n        res.end();\r\n    });\r\n    file.on('finish', function() {\r\n        //  Response: SUCCESS (200)\r\n        res.writeHead(200, { 'Content-Type': 'text/plain' });\r\n        res.end(fullFileName);\r\n    });\r\n\r\n    //  Pipe the request to the file\r\n    req.pipe(file);\r\n});\r\n\r\nMeteor.methods({\r\n    /**\r\n     * Returns true if import is supported for default service type\r\n     * @returns {boolean}\r\n     */\r\n    importSupported: function() {\r\n        const server = OHIF.servers.getCurrentServer();\r\n        if (server && server.type === 'dimse') {\r\n            return true;\r\n        }\r\n    },\r\n    /**\r\n     * Imports studies from local into study list\r\n     * @param studiesToImport Studies to import\r\n     * @param studyImportStatusId Study import status collection id to track import status\r\n     */\r\n    importStudies: function(studiesToImport, studyImportStatusId) {\r\n        if (!studiesToImport || !studyImportStatusId) {\r\n            return;\r\n        }\r\n\r\n        const server = OHIF.servers.getCurrentServer();\r\n\r\n        if (!server) {\r\n            throw 'No properly configured server was available over DICOMWeb or DIMSE.';\r\n        }\r\n\r\n        if (server.type === 'dicomWeb') {\r\n            //TODO: Support importing studies into dicomWeb\r\n            OHIF.log.warn('Importing studies into dicomWeb is currently not supported.');\r\n        } else if (server.type === 'dimse') {\r\n            importStudiesDIMSE(studiesToImport, studyImportStatusId);\r\n        }\r\n    },\r\n    /**\r\n     * Create a new study import status item and insert it into the collection to track import status\r\n     * @returns {studyImportStatusId: string}\r\n     */\r\n    createStudyImportStatus: function() {\r\n        const studyImportStatus = {\r\n            numberOfStudiesImported: 0,\r\n            numberOfStudiesFailed: 0\r\n        };\r\n        return OHIF.studylist.collections.StudyImportStatus.insert(studyImportStatus);\r\n    },\r\n    /**\r\n     * Remove the study import status item from the collection\r\n     * @param id Collection id of the study import status in the collection\r\n     */\r\n    removeStudyImportStatus: function(id) {\r\n        OHIF.studylist.collections.StudyImportStatus.remove(id);\r\n    }\r\n});\r\n\r\nfunction importStudiesDIMSE(studiesToImport, studyImportStatusId) {\r\n    if (!studiesToImport || !studyImportStatusId) {\r\n        return;\r\n    }\r\n    //  Perform C-Store to import studies and handle the callbacks to update import status\r\n    DIMSE.storeInstances(studiesToImport, function(err, file) {\r\n        try {\r\n            //  Use fiber to be able to modify meteor collection in callback\r\n            fiber(function() {\r\n                try {\r\n                    //  Update the import status\r\n                    if (err) {\r\n                        OHIF.studylist.collections.StudyImportStatus.update(\r\n                            { _id: studyImportStatusId },\r\n                            { $inc: { numberOfStudiesFailed: 1 } }\r\n                        );\r\n                        OHIF.log.warn('Failed to import study via DIMSE: ', file, err);\r\n                    } else {\r\n                        OHIF.studylist.collections.StudyImportStatus.update(\r\n                            { _id: studyImportStatusId },\r\n                            { $inc: { numberOfStudiesImported: 1 } }\r\n                        );\r\n                        OHIF.log.info('Study successfully imported via DIMSE: ', file);\r\n                    }\r\n\r\n                } catch(error) {\r\n                    OHIF.studylist.collections.StudyImportStatus.update(\r\n                        { _id: studyImportStatusId },\r\n                        { $inc: { numberOfStudiesFailed: 1 } }\r\n                    );\r\n                    OHIF.log.warn('Failed to import study via DIMSE: ', file, error);\r\n                } finally {\r\n                    //  The import operation of this file is completed, so delete it if still exists\r\n                    if (fileExists(file)) {\r\n                        fs.unlink(file);\r\n                    }\r\n                }\r\n\r\n            }).run();\r\n        } catch(error) {\r\n            OHIF.studylist.collections.StudyImportStatus.update(\r\n                { _id: studyImportStatusId },\r\n                { $inc: { numberOfStudiesFailed: 1 } }\r\n            );\r\n            OHIF.log.warn('Failed to import study via DIMSE: ', file, error);\r\n        }\r\n\r\n    });\r\n}\r\n\r\nfunction createFolderIfNotExist(folder) {\r\n    const folderParts = folder.split('/');\r\n    let folderPart = folderParts[0];\r\n    for (let i = 1; i < folderParts.length; i++) {\r\n        folderPart += '/' + folderParts[i];\r\n        if (!folderExists(folderPart)) {\r\n            fs.mkdirSync(folderPart);\r\n        }\r\n    }\r\n}\r\n\r\nfunction fileExists(folder) {\r\n    try {\r\n        return fs.statSync(folder).isFile();\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction folderExists(folder) {\r\n    try {\r\n        return fs.statSync(folder).isDirectory();\r\n    } catch (err) {\r\n        return false;\r\n    }\r\n}\r\n","import './importStudies.js';\r\n"]}